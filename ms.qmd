---
title: "Cognitive processes are robust to early environmental conditions in two lizard species"
format:
  docx: 
    number_sections: true
    linestretch: 2
    fontsize: 12pt
    mainfont: Times New Roman
    bibliography: "./bib/refs.bib"
    csl: "./bib/behavioral-ecology.csl"
execute:
  echo: false
  error: false
  cache: false
  warning: false
link-citations: true
crossref:  
  fig-title: Fig    # (default is "Figure")
  title-delim: —     # (default is ":")
  fig-prefix: Fig.   # (default is "Figure")
  tbl-prefix: Table  # (default is "Table")
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
pacman::p_load(tidyverse, flextable, emmeans, DHARMa, brms, here, ggplot2, lme4, zoo, lmerTest, broom, tidybayes, ggh4x, PupillometryR, cowplot, png, grid)
```

Pablo Recio^1^,$\ddagger$ , Dalton C. Leibold^1^, Ondi L. Crino ^1,2^, Kristoffer H. Wild^1,3^, Christopher R. Friesen^4^, Basile Mauclaire^1,5^, Amelia Y. Peardon ^1^, Daniel W.A. Noble^1^

^1^ Division of Ecology and Evolution, Research School of Biology, The Australian National University, Canberra, ACT 2601, Australia  
^2^ Flinder's University, College of Science and Engineering, Bedford Park, SA 5042, Australia  
^3^ Melbourne University, Melbourne, VIC 3000, Australia  
^4^ University of Wollongong, Wollongong, NSW 2500, Australia  
^5^ Université de Lille, Lille 59000, France  
$\ddagger$ Corresponding author: pablo.reciosantiago@anu.edu.au  

ORCID:

Pablo Recio ORCID: 0000-0002-5890-0218  
Dalton C. Leibold ORCID: 0000-0001-9645-2033  
Ondi L. Crino ORCID: 0000-0001-5700-1387  
Kristoffer H. Wild ORCID: 0000-0001-6714-3311  
Christopher R. Friesen ORCID: 0000-0001-5338-7454  
Basile Mauclaire ORCID: 0000-0003-3956-6055   
Amelia Y. Peardon ORCID: 0009-0005-6227-8379  
Daniel W.A. Noble ORCID: 0000-0001-9460-8743  

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

## Abstract
Animals must acquire new information through learning to adjust their behavior adaptively. However, learning ability can be constrained by conditions experienced during early development, when the brain is especially susceptible to environmental conditions. For example, temperature can result in phenotypically plastic adjustments to growth, metabolism, and learning in ectotherms. In vertebrates, thermal conditions can increase the production of glucocorticoid (GCs) - ‘stress’ hormones. Maternal GCs can be transmitted to offspring during development, potentially impacting their learning abilities. GCs and thermal environments are, therefore, predicted to have interactive effects on the development of learning in ectotherms. Here, we investigated the combined effects of prenatal corticosterone (CORT) - the main GC in reptiles - and incubation temperature on associative learning using two species of lizards, _Lampropholis delicata_ and _L. guichenoti_. We manipulated CORT levels and temperature in a 2x2 factorial design, and then subjected juveniles to a color-associative learning task. We predicted that elevated CORT and low temperatures would impair associative learning. However, both species showed similar learning rates independently of treatment. Our results suggest that these two species may have evolved mechanisms to maintain learning performance despite prenatal challenges. We also found that color affected decision-making in both species. Overall, we observed a non-learned preference towards blue, underscoring the need to carefully select the color used in cognitive tests involving visual stimuli.     

## Introduction
Cognition is a set of processes by which animals gather, preserve, and use information from their environment through perception, learning, memory, and decision-making [@shettleworth]. These processes are fundamental to foraging, mate selection, antipredatory strategies, and social behaviors, all of which are crucial for survival and reproduction [@dukas_evolutionary_2004]. Learning - acquiring and consolidating new information [@dukas_evolutionary_2004] - is essential for coping with environmental changes by enabling individuals to create new associations between events [@dukas_evolutionary_2004; @leal_behavioural_2012; @buchanan_condition_2013]. However, the capacity to acquire information varies among individuals, shaped by factors such as age, sex, and the developmental environment [@szuran_water_1994; @lemaire_prenatal_2000; @zhu_prenatal_2004; @amiel_hotter_2012; @amiel_egg_2014; @carazo_sex_2014; @noble_age-dependent_2014]. Interindividual differences in learning can lead to unequal responses to environmental conditions, potentially affecting population dynamics [@ward2016ecological; @welklin2024spatial]. For example, fast learners may better exploit novel resources or avoid new dangerous stimuli, while those with lower learning capabilities might struggle to adapt to environmental changes [@ward2016ecological]. Learning rate could affect their survival and reproductive output, ultimately influencing population growth rates and stability [@ward2016ecological; @welklin2024spatial]. Therefore, understanding the factors that shape learning is crucial to predict how populations will respond to novel conditions.     
 
Variation in learning is usually considered a product of an individual's capacity to form associations between stimuli through memory formation [@dukas_evolutionary_2004]. However, differences in learning among individuals can also result from innate preferences or perceptual biases that influence how information is acquired and affect the decision-making process [@toure2022colour]. The brain's integration of information and the establishment of new connections is a complex process involving interactions among various nuclei to generate responses [@dukas_evolutionary_2004]. Consequently, any impact on specific brain regions or their interactions can directly influence learning through memory formation or alterations in decision-making.  

Because the brain is highly susceptible to environmental inputs during early stages of life, developmental conditions are especially relevant in shaping cognitive abilities  [@zhu_prenatal_2004]. Impacts on brain development can have long-lasting effects on cognition, potentially influencing an individual's capacity to learn and adapt to new environments [@lemaire_prenatal_2000; @zhu_prenatal_2004; @amiel_hotter_2012; @abayarathna_effects_2020]. For example, the state of the mother can influence offspring phenotype beyond genetic transmission through nest-site selection, provisioning, or the transmission of hormones or nutrients [i.e., 'maternal effects' @moore_mothers_2019]; and the developing brain is also susceptible to these effects.   
  
Glucocorticoids (GCs) are a class of steroid hormones that are particularly relevant in phenotypic plasticity. In vertebrates, GCs regulate metabolism and maintain homeostasis in response to disturbances [i.e., ‘the stress response’ @sapolsky_how_2000; @picard_mitochondrial_2014]. Under stressful situations, animals react by initiating adaptive physiological and behavioral adjustments mediated by GCs. These GCs can be transmitted directly from parents to their offspring with various effects on offspring phenotype [reviewed by @Crino_2023]. Elevation in GCs during early stages of development typically results in altered neurogenesis, brain structure, and metabolic activity that, in most cases, are related to decreased learning abilities [@lemaire_prenatal_2000; @zhu_prenatal_2004; @du_dynamic_2009; @eaton2015mild; @farrell_developmental_2015-learn; @farrell_developmental_2016]. For instance, prenatal stress in rats (_Rattus norvegicus_) suppresses neurogenesis in the dentate gyrus, which is associated with impairments in hippocampal-related spatial tasks [@lemaire_prenatal_2000]. Factors such as sex or the nature of the learning task can also affect the direction and magnitude of the effects of prenatal exposure to elevated GCs [@szuran_water_1994; @crino_corticosterone_2014-learn; @farrell_developmental_2015-learn; @bebus_associative_2016; @farrell_developmental_2016]. Because the effects of prenatal GCs on learning can be context-dependent, it is crucial to conduct studies across diverse taxa and experimental conditions to understand these effects fully.  

In addition to the environments experienced by parents, offspring also experience potentially stressful environmental conditions that can interact with or amplify parental effects. In ectotherms, the early thermal environment is a mechanism of phenotypic plasticity, influencing a broad spectrum of traits, including growth, metabolism, or cognition [@amiel_hotter_2012; @amiel_egg_2014; @dayananda_incubation_2017; @noble_developmental_2018; @abayarathna_effects_2020]. For instance, Port Jackson sharks (_Heterodontus portusjacksoni_) incubated at warmer temperatures took fewer days to master a numerical learning task than those incubated at cooler [@vila_pouca_quantity_2019]. In skinks, high incubation temperatures are generally associated with faster learning rates [@amiel_hotter_2012; @amiel_egg_2014; @clark_colour_2014]; but velvet geckos (_Amalosia lesueurii_) incubated at temperatures beyond their natural thermal range are worse learners than those incubated at colder temperatures [@dayananda_incubation_2017; @abayarathna_effects_2020]. Changes in neural structure and function likely mediate the effects of incubation temperature in reptiles, as high temperatures increase neural density and metabolic activity in the brain [@coomber_independent_1997; @sakata_neural_2000; @amiel_effects_2017; @beltran_are_2021].  

GCs can play a pivotal role in determining vertebrate responses to elevated temperatures [@Crino_2023], potentially fostering natural interactions between temperature and GCs. Additionally, GCs and temperatures can act upon similar physiological mechanisms [@coomber_independent_1997; @lemaire_prenatal_2000; @sakata_neural_2000; @zhu_prenatal_2004; @du_dynamic_2009; @amiel_effects_2017; @beltran_are_2021]. Therefore, the effects of GCs and temperature may be interdependent. However, the interactive effects of GCs and temperature on learning abilities remain unexplored, yet understanding of how temperature and GC’s interact is particularly relevant in global climate change [@vinogradov2024inbreeding].  

Here, we investigated the combined effects of prenatal corticosterone (CORT) - the main GC in reptiles - and incubation temperature on cognition in two species of skinks, the delicate skink (_Lampropholis delicata_) and the common garden skink (_L. guichenoti_). We manipulated CORT levels in the eggs and then incubated them at two different temperatures in a 2X2 factorial design. Post-incubation, juveniles were subjected to a color-associative task to assess their learning abilities. We hypothesized that prenatal CORT levels and thermal environment would impact the learning of an association task. We predicted that individuals exposed to high levels of CORT or low temperatures would learn slower than control individuals or those incubated at higher temperatures [@zhu_prenatal_2004; @amiel_hotter_2012; @eaton2015mild; @amiel_effects_2017]. Additionally, we predicted that incubation at high temperatures would mitigate the impact of CORT on learning performance, while cold incubation temperatures were expected to enhance the effects of CORT. The interactive effects of CORT and temperature may occur for two reasons that are not mutually exclusive: first, an increase in temperature leads to an overall rise in neural density [@amiel_effects_2017], thereby counteracting the impact of CORT [see @lemaire_prenatal_2000; @zhu_prenatal_2004; @eaton2015mild]; and second, the elevated metabolic rate associated with higher temperatures could accelerate CORT metabolism, resulting in embryos being exposed to CORT for a shorter time.    

## Methods  

#### Subjects  
_Lampropholis delicata_ and _L. guichenoti_ are small [∼35-55 mm snout-vent length (SVL)], oviparous, and generalist skinks that usually share the same habitat in suburban areas throughout south-eastern Australia [@chapple_know_2011]. Both species have similar breeding periods, but with some differences in reproductive output: while *L. delicata* lays 1-6 eggs in only one clutch per season, *L. guichenoti* clutches are smaller (1-5 eggs per clutch), and they usually lay two clutches per season [@joss1985reproductive; @chapple_know_2011; @chapple_biology_2014]. Previous studies exploring behavioral differences between the two species have found _L. delicata_ to be more exploratory than _L. guichenoti_ [@chapple_know_2011]. However, no differences in learning were observed between the skinks in an associative learning task [@bezzina2014does].   

#### Husbandry  
*Breeding colony* -- We tested juveniles from a 2019-established lab breeding colony. A total of 270 and 180 adults of *L. delicata* and *L. guichenoti*, respectively, were housed in plastic containers (41.5 L x 30.5 W x 21 H cm) with six lizards (2 males and 4 females) per enclosure. Enclosures were lined with non-stick matting, shelter, and several small water dishes. Water is given daily, and they were fed approximately 40 mid-size crickets (*Acheta domestica*) per enclosure three days a week. Crickets were dusted with calcium weekly and multivitamins and calcium biweekly. We used a heat chord and a heat lamp following a 12 h light:12 h dark cycle to ensure a temperature gradient. Room temperatures were set to 22-24 ºC, and the warm side of enclosures was usually at 32-34 ºC.  

*Eggs collection and incubation* -- Between mid-October 2022 to the end of February 2023, we provided females with a place to lay eggs by means of small boxes (12.5 L x 8.3 W x 5 H cm) containing moist vermiculite. These boxes were placed in one side of the communal enclosures (see above). We checked for eggs in the boxes three days a week (Monday, Wednesday, and Friday). After collection, we measured the length and width of eggs with a digital caliper to the nearest 0.1 mm, and mass using a digital scale (OHAUS, Model spx123; ± 0.001 g error). Then, we assigned individual IDs to the clutch and each egg. Eggs were treated with a CORT or control treatment (see CORT and Temperature Manipulation below) and were placed in individual cups (80 mL) with moist vermiculite (12 parts water to 4 parts vermiculite). The cups were covered with cling wrap to retain moisture and left in LATWIT 2X5D-R1160 incubators at two different temperatures (see CORT and Temperature manipulation below) until hatching. Eggs were then checked three times a week for hatchlings.  

*Hatchlings* -- Immediately after hatching, we measured lizards' snout-to-vent length (SVL) and tail length (TL) with a ruler to the nearest mm, and mass using a digital scale (OHAUS, Model spx123; ± 0.001 g error). Hatchlings were then housed individually in small enclosures (18.7L x 13.2W x 6.3H cm) provided with non-stick matting, shelter, and a water dish. All care otherwise follows similar protocols to adults (see above).  

Two weeks prior to the training phase (see details below), 1.5 to 5 months old lizards (see details in Statistical Analyses and Supplementary Material) were moved to the experimental arena for acclimatization. The arenas were individual medium-size (41 L x 29.7 W x 22 H cm) plastic containers with a shelter (9 L x 6 W x 1.5 H cm) on one of the sides and a water dish on the other. These arenas were placed in two rooms in 7 different racks that were monitored by 7 different CCTV systems (device model DVR-HP210475), allowing us to record their behavior during the experiment (see details below). Although the conditions in the experimental rooms were identical to the colony room, the number of lizards per species and treatment in each rack was counterbalanced to control for any potential effect of the room or the position of the lizard in the rack. During acclimatization and throughout the experiment, lizards were fed with only one cricket per day dusted with calcium and multivitamins, and water was supplied *ad libitum*. We provided a temperature gradient by means of a heat cord and heat lamps in a 12 h light: 12 h dark cycle.  

#### CORT and Temperature Manipulation  
To empirically test the effect of early environment, we manipulated CORT concentration in eggs and incubated them under one of two temperature regimes (‘Cold’ - 23 ± 3 ºC or ‘Hot’ - 28 ± 3 ºC) in a 2x2 factorial design (@fig-Methods A). We topically dosed eggs with a CORT solution (10 pg/mL) or a control treatment (100% ethanol). Corticosterone treatments were made by dissolving crystalline corticosterone (Sigma, Cat. No. C2505) in 100% ethanol. To dose eggs, we applied 5µl of solutions to eggshells using a micropipette. We selected these doses based on previous studies publishing yolk CORT concentrations in other oviparous reptiles [@lovern2008effects; @hanover2019corticosterone], while also validating that it fell within the range of CORT concentrations in eggs within our population [@crino2024eggs]. CORT treatment increased mean yolk CORT levels ~3.7x higher than control eggs [@crino2024eggs]. After the treatment, the eggs were incubated in one of the two previously mentioned temperature regimes (‘Cold’ or ‘Hot’) until hatching. The number of eggs per clutch assigned to each hormone and temperature treatment was counterbalanced in both species.  
  
#### Learning  
To estimate learning skills, we tested each lizard's ability to locate a food reward in a color-associative learning task (@fig-Methods C, D). First, we performed a training phase where lizards had to learn to eat from white 3D-printed PLA ramps (9 L x 4 W x 5 H cm) identical in size and shape to the ones used during the associative task (@fig-Methods B). We divided the training phase into three stages: the first stage where lizards had to eat a small, frozen cricket (*A. domestica*) from an opaque petri dish (3D x 1.6H cm) placed in the middle of their enclosure (@fig-Methods C, Stage 1); the second stage where the petri dish with the cricket was placed on top of the white 3D printed ramps (@fig-Methods C, Stage 2); and the third where the cricket was left inside a well (3D x 1.75H cm) on the top of the ramp (@fig-Methods C, Stage 3). Every trial began when we left the feeding block (petri dish, ramp, or both) inside the enclosure and finished one hour later when we took it away. At the end of each trial, we recorded whether the cricket had been consumed. A trial was considered successful if the lizard could locate and consume the reward, while completion of each stage required the lizards to eat the crickets in at least 5 out of 6 trials to ensure lizards were feeding consistently. This phase lasted 38 days until all the lizards learned to eat from the ramp; only in one case did we decide not to use the lizard because its behavior inconsistent throughout  the course of the training phase.  

During the associative learning phase, we trained lizards to associate color with a food reward (@fig-Methods D). This test was like the third stage of the training phase, but here, lizards were presented with three 3D-printed ramps that differed in color. Ramps were green, red, and blue, as previous studies demonstrate that squamates can discriminate between these colors [@Baden_Osorio_2019_Vert_vision]. The food reward (small, frozen, *A. domestica* crickets) was placed inside the wells of the three ramps, covering two of the crickets with 3D-printed lids (3D x 0.5H cm) so prey was only accessible in "the correct" ramp. This way, we controlled for prey chemical cues, as the lids had a series of small holes on the top to allow the release of those chemicals. To control for potential color preference that could bias our results, we split the subjects into two groups counterbalanced by treatment and species: in one group the correct choice (i.e., the ramp with the non-covered frozen cricket) was blue, while the other group was assigned the red ramp as correct. In all trials, the position of the ramps was changed randomly to ensure subjects were using color rather than spatial cues for the association. Lizards were tested in this task once a day for 35 days.  

```{r, fig-Methods}
#| label: fig-Methods
#| fig.cap: "Experimental design of the study. Panel A shows the early environment manipulation. In panel B, the measurements of the 3D-printed ramps that were employed in the habituation and learning tasks. Panel C shows the habituation process in three different stages. In panel D, the associative task is done with the three different 3D-printed ramps. White lids in D show the ramps where the food reward was not attainable."

knitr::include_graphics("./Others/LEARN_FIG1.png")

```

The experiment occurred between the 6^th^ of March to the 17^th^ of May 2023, and tests were performed between 1100 to 1200 when the lizards were active. Trials in the learning phase were recorded with CCTV systems, always using the same camera per individual. We recorded whether the animal chose the correct ramp first or not. We considered that a choice was made if the head of the lizard was inside the well of one of the ramps. We considered a trial to have failed if there was no choice after one hour of recording. These trials were scored as NA. We excluded from our analyses those individuals that performed inconsistently, as defined as not choosing in less than 20 out of 35 trials (~57%). We considered each lizard's first trial to be the first one where a choice was made.   

#### Statistical analyses  
We performed analyses for each species separately. Preliminary analyses showed a significant effect of the color. As such, we decided to split the data by color (blue or red). Therefore, we ran a total of four different Bayesian multilevel models using the _brm_ function from the brms package [@burkner2017brms] in R (version 2.8.2) [@R]. We ran four parallel MCMC chains of 3000 iterations for each model, with a warmup period of 1000 iterations. We checked that all MCMC chains converged (R~hat~ < 1.2) and mixed effectively to ensure we had >1000 effective samples from the posterior distribution. 

We modelled correct choice [correct (1) or not (0)] as the response variable, and trial, incubation temperature (Cold versus Hot), hormone (CORT versus Control), and the three-way interaction as fixed factors. The error structure was modeled using a Bernoulli distribution with a logit link function [family = Bernoulli(link = 'logit')]. We included each lizard's random intercept and slope (trial) in our models. We also incorporated the clutch identity as a random factor. _L. delicata_ lays one clutch per breeding season while _L. guichenoti_ lays up to two [@joss1985reproductive; @chapple_know_2011; @chapple_biology_2014]. Since egg collection was done during half of the breeding season, each clutch likely came from a unique mother, so clutch identity captures potential maternal effects. In addition, previous studies indicate that clutches are typically fertilized by a single male, although sperm storage can occur [@kar2024heritability]. Considering our partial split-clutch design and the expectation that maternal effects are likely more pronounced than paternal effects in these species, incorporating clutch as a random factor should effectively account for parental condition. 

Learning in lizards can be age-dependent [@noble_age-dependent_2014], and given that incubation temperature will affect hatching time [@zhang2023developmental], we explored the effects of age on learning by including it as a predictor. Lizard ages at the beginning of the experiment ranged from 41 to 148 days old in _L. delicata_ and 48 to 132 in _L. guichenoti_. However, when this variable was included in the models, we did not find any significant effect of age (see _Supplementary Material_). As such, we present models without age as a fixed effect. 

Learning rates were the estimated slopes of ‘trial’ and its interaction with hormone and temperature treatments. We used the posterior distributions of parameters to test for differences in learning rates between treatments and species. Slopes directly measure the change in the probability of choosing the correct dish across trials. Learning rates greater than zero, indicating that lizards were improving over trails, were considered evidence of learning, while those less or equal to zero were not. 

Decision-making, in contrast, is considered the average probability of choosing correctly in a given trial. We estimated the predicted probability of choosing the correct ramp in the first trial using the intercepts from our posterior distributions following the formula:  

$$
\text{Probability}_{\text{(Trial)}} = \frac{e^{(\text{Intercept } + \text{ Slope } \times \text{ Trial})}}{1 + e^{(\text{Intercept } + \text{ Slope } \times \text{ Trial})}}
$$


In our case, we were interested in estimating the probability of correct choice at the early stages of learning [P~(1)~] because perception can play a role in the learning process [@toure2022colour]. It also allowed us to test if lizards were biased towards the assigned color. 

We calculated the p~mcmc~ to test the hypothesis that learning rates and contrasts were different from zero, and that the probability of choosing correctly in the first trial was higher than expected by chance (0.33). We considered statistical significance as p~mcmc~ < 0.05.  

## Results
```{r, cleaning}
#| label: cleaning
source(here("R", "1_data_process.R"))
# Once we run this code, the result will be the main data base used (data_clean).
write.csv(data_clean, file= "./output/databases_clean/data_clean.csv")
```

```{r, sampleSize}
#| label: sampleSize
# List with the sample sizes from the database (here("output/databases_clean/data_clean.csv") as the sample size per species and group is the same on each task. We used function sample (see func.R) to estimate the sample size per treatment and species.
source(here("R", "func.R"))
#
specie <- c("delicata", "guichenoti")
groups <- c("Red", "Blue")
hormone <- c("CORT", "Control")
temperature <- c("Cold", "Hot")
#
n_list <- list()
#
for(i in 1:length(specie)){
  for(j in 1:length(groups)){
    for(k in 1:length(hormone)){
      for(l in 1:length(temperature)){
        n_list[[paste(specie[i], groups[j], hormone[k], temperature[l], sep = "_")]] <- sample(specie[i], groups[j], hormone[k], temperature[l])
      }
    }
  }
}
```

We started with 96 lizards, 48 per species and 12 per treatment per species. However, due to mortality (n = 11), failing to pass the training stage (n = 1), or lack of motivation during the learning tasks (n = 3), we had a final sample size of 81 lizards. Final sample sizes per treatment and species are listed in @fig-deli and @fig-guich (figures for both species with the raw data are included in the _Supplementary Material_). Mean slopes (denoted as β throughout) per treatment for both species are provided in Table 1 in the _Supplementary Material_.    
```{r, models}
#| label: models
# Fitting the model and extraction of posteriors for both species using fit_m function (see func.r in R folder). The result everytime the function is used is a df with the posteriors of the model. The functions saves the model automatically in output/models; and when the parameter refit = FALSE then the posteriors are extracted from the model previously written instead of fitting the model again each time.
source(here("R", "func.R"))
# Model formula: FC_associative ~ Trial*cort*temp + (1 + Trial|lizard_id) + (1| clutch)
## A.1) L. delicata
deli_red <- fit_m("deli", "red", refit = FALSE)
write.csv(deli_red, file= "./output/Checking/deli_red.csv")
deli_blue <- fit_m("deli", "blue", refit = FALSE)
write.csv(deli_blue, file= "./output/Checking/deli_blue.csv")
## A.2) L. guichenoti
guich_red <- fit_m("guich", "red", refit = FALSE)
write.csv(guich_red, file= "./output/Checking/guich_red.csv")
guich_blue <- fit_m("guich", "blue", refit = FALSE)
write.csv(guich_blue, file= "./output/Checking/guich_blue.csv")
```

```{r, results}
#| label: results
# Rename some of the posteriors and obtain estimates for the "learning rate" for each group and treatment. This "learning rate" consists on the slope of the posterior of the Trial parameter. The slope is the rate at which the probability of choosing the correct ramp increases with each trial. The slope is obtained by adding the posterior of the Trial parameter to the posterior of the interaction between Trial and the treatment (cort and temp). 
## 1) L. delicata
### Group = red
dar_CORTCold <- deli_red$b_Trial #Slope for treatment CORT-Cold for L. delicata, red as the right choice
dar_ControlCold <- (deli_red$'b_Trial:cortControl' + deli_red$b_Trial)
dar_CORTHot <- (deli_red$'b_Trial:tempHot' + deli_red$b_Trial)
dar_ControlHot <- (deli_red$'b_Trial:cortControl:tempHot' + deli_red$b_Trial+ deli_red$'b_Trial:cortControl' + deli_red$'b_Trial:tempHot')
### Group = blue
dab_CORTCold <- deli_blue$b_Trial
dab_ControlCold <- (deli_blue$'b_Trial:cortControl' + deli_blue$b_Trial)
dab_CORTHot <- (deli_blue$'b_Trial:tempHot' + deli_blue$b_Trial)
dab_ControlHot <- (deli_blue$'b_Trial:cortControl:tempHot' + deli_blue$b_Trial + deli_blue$'b_Trial:cortControl' + deli_blue$'b_Trial:tempHot')
## 2) L. guichenoti
### Group = red
gar_CORTCold <- guich_red$b_Trial
gar_ControlCold <- (guich_red$'b_Trial:cortControl' + guich_red$b_Trial)
gar_CORTHot <- (guich_red$'b_Trial:tempHot' + guich_red$b_Trial)
gar_ControlHot <- (guich_red$'b_Trial:cortControl:tempHot' + guich_red$b_Trial + guich_red$'b_Trial:cortControl' + guich_red$'b_Trial:tempHot')
### Group = blue
gab_CORTCold <- guich_blue$b_Trial
gab_ControlCold <- (guich_blue$'b_Trial:cortControl' + guich_blue$b_Trial)
gab_CORTHot <- (guich_blue$'b_Trial:tempHot' + guich_blue$b_Trial)
gab_ControlHot <- (guich_blue$'b_Trial:cortControl:tempHot' + guich_blue$b_Trial + guich_blue$'b_Trial:cortControl' + guich_blue$'b_Trial:tempHot')
#
# Rename some of the posteriors and obtain estimates for the "decision-making" for each group and treatment. This "decision-making" consists of the probability of choosing right in the first trial. 
## 1) L. delicata
### Group = red
probright_drCORTCold <- exp(deli_red$b_Intercept + dar_CORTCold)/(1+exp(deli_red$b_Intercept + dar_CORTCold))
probright_drControlCold <- exp(deli_red$b_cortControl + deli_red$b_Intercept + dar_ControlCold)/(1+exp(deli_red$b_cortControl + deli_red$b_Intercept + dar_ControlCold))
probright_drCORTHot <- exp(deli_red$b_tempHot + deli_red$b_Intercept + dar_CORTHot)/(1+exp(deli_red$b_tempHot + deli_red$b_Intercept + dar_CORTHot))
probright_drControlHot <- exp(deli_red$b_cortControl + deli_red$b_tempHot + deli_red$b_Intercept + dar_ControlHot)/(1+exp(deli_red$b_cortControl + deli_red$b_tempHot + deli_red$b_Intercept + dar_ControlHot))
### Group = blue
probright_dbCORTCold <- exp(deli_blue$b_Intercept + dab_CORTCold)/(1+exp(deli_blue$b_Intercept + dab_CORTCold))
probright_dbControlCold <- exp(deli_blue$b_cortControl + deli_blue$b_Intercept + dab_ControlCold)/(1+exp(deli_blue$b_cortControl + deli_blue$b_Intercept + dab_ControlCold))
probright_dbCORTHot <- exp(deli_blue$b_tempHot + deli_blue$b_Intercept + dab_CORTHot)/(1+exp(deli_blue$b_tempHot + deli_blue$b_Intercept + dab_CORTHot))
probright_dbControlHot <- exp(deli_blue$b_cortControl + deli_blue$b_tempHot + deli_blue$b_Intercept + dab_ControlHot)/(1+exp(deli_blue$b_cortControl + deli_blue$b_tempHot + deli_blue$b_Intercept + dab_ControlHot))
## 2) L. guichenoti
### Group = red
probright_grCORTCold <- exp(guich_red$b_Intercept + gar_CORTCold)/(1+exp(guich_red$b_Intercept + gar_CORTCold))
probright_grControlCold <- exp(guich_red$b_cortControl + guich_red$b_Intercept + gar_ControlCold)/(1+exp(guich_red$b_cortControl + guich_red$b_Intercept + gar_ControlCold))
probright_grCORTHot <- exp(guich_red$b_tempHot + guich_red$b_Intercept + gar_CORTHot)/(1+exp(guich_red$b_tempHot + guich_red$b_Intercept + gar_CORTHot))
probright_grControlHot <- exp(guich_red$b_cortControl + guich_red$b_tempHot + guich_red$b_Intercept + gar_ControlHot)/(1+exp(guich_red$b_cortControl + guich_red$b_tempHot + guich_red$b_Intercept + gar_ControlHot))
### Group = blue
probright_gbCORTCold <- exp(guich_blue$b_Intercept + gab_CORTCold)/(1+exp(guich_blue$b_Intercept + gab_CORTCold))
probright_gbControlCold <- exp(guich_blue$b_cortControl + guich_blue$b_Intercept + gab_ControlCold)/(1+exp(guich_blue$b_cortControl + guich_blue$b_Intercept + gab_ControlCold))
probright_gbCORTHot <- exp(guich_blue$b_tempHot + guich_blue$b_Intercept + gab_CORTHot)/(1+exp(guich_blue$b_tempHot + guich_blue$b_Intercept + gab_CORTHot))
probright_gbControlHot <- exp(guich_blue$b_cortControl + guich_blue$b_tempHot + guich_blue$b_Intercept + gab_ControlHot)/(1+exp(guich_blue$b_cortControl + guich_blue$b_tempHot + guich_blue$b_Intercept + gab_ControlHot))
#
# Modyfying a parameter for the results later (see p_format function in func.R)
equal <- TRUE
```

#### Early developmental environments do not influence visual-sensory systems to impact decision-making  

_Lampropholis delicata_: individuals given the blue ramp as the correct choice had an `r format_dec(((mean(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot)) / mean(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot))) - 1) * 100, 1)`% increase in the probability of choosing the right ramp on trial 1 compared to lizards assigned to the red ramps (mean P~Blue~ = `r format_dec(mean(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot)), 3)`, 95% CI P~Blue~ = [`r format_dec(quantile(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot), 0.025), 3)` , `r format_dec(quantile(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot), 0.975), 3)`]; mean P~Red~ = `r format_dec(mean(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot)), 3)`, 95% CI P~Red~ = [`r format_dec(quantile(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot), 0.025), 3)` , `r format_dec(quantile(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot), 0.975), 3)`]), suggesting a bias towards blue. A blue bias was also supported by initial choices differing significantly from chance, and this was consistent across all treatments (i.e., P > 0.33; Table 2 in _Supplementary Material_). However, this difference in the probability of correctly choosing between red and blue ramps was not significant, likely due to small sample sizes (Contrast between probabilities: P~Blue~ - P~Red~ = `r format_dec(mean(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot)) - mean(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot) - c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot)), 3)`, see @fig-deli).  

Decision-making by _L. delicata_ was not impacted by the CORT (P~Control~ - P~CORT~ = `r format_dec(mean(c(probright_drControlCold, probright_drControlHot)) - mean(c(probright_drCORTCold, probright_drCORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_drControlCold, probright_drControlHot) - c(probright_drCORTCold, probright_drCORTHot)), 3)`), incubation temperature (P~Hot~ - P~Cold~ = `r format_dec(mean(c(probright_drControlHot, probright_drCORTHot)) - mean(c(probright_drControlCold, probright_drCORTCold)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_drControlHot, probright_drCORTHot) - c(probright_drControlCold, probright_drCORTCold)), 3)`) or their interaction ([(P~Control-Hot~ - P~CORT-Hot~) - (P~Control-Cold~ - P~CORT-Cold~)] = `r format_dec(mean(probright_drControlHot - probright_drCORTHot) - mean(probright_drControlCold - probright_drCORTCold), 3)`, p~mcmc~ `r format_p(pmcmc(probright_drControlHot - probright_drCORTHot - (probright_drControlCold - probright_drCORTCold)), 3)`) when red ramps were the correct choice (see @fig-deli A). When blue ramps were the correct choice, there was no significant effect of hormone (P~Control~ - P~CORT~ = `r format_dec(mean(c(probright_dbControlCold, probright_dbControlHot)) - mean(c(probright_dbCORTCold, probright_dbCORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_dbControlCold, probright_dbControlHot) - c(probright_dbCORTCold, probright_dbCORTHot)), 3)`), temperature (P~Hot~ - P~Cold~ = `r format_dec(mean(c(probright_dbControlHot, probright_dbCORTHot)) - mean(c(probright_dbControlCold, probright_dbCORTCold)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_dbControlHot, probright_dbCORTHot) - c(probright_dbControlCold, probright_dbCORTCold)), 3)`) or their interaction ([(P~Control-Hot~ - P~CORT-Hot~) - (P~Control-Cold~ - P~CORT-Cold~)] = `r format_dec(mean(probright_dbControlHot - probright_dbCORTHot) - mean(probright_dbControlCold - probright_dbCORTCold), 3)`, p~mcmc~ `r format_p(pmcmc(probright_dbControlHot - probright_dbCORTHot - (probright_dbControlCold - probright_dbCORTCold)), 3)`) either (see @fig-deli D).   

_Lampropholis guichenoti_: when the correct ramps were blue, _L. guichenoti_ had a `r format_dec(((mean(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot)) / mean(c(probright_grCORTCold, probright_grControlCold, probright_grCORTHot, probright_grControlHot))) - 1) * 100, 1)`% increase in the probability of choosing the right ramp on trial 1 compared to red ramps (mean P~Blue~ = `r format_dec(mean(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot)), 3)`, 95% CI P~Blue~ = [`r format_dec(quantile(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot), 0.025), 3)` , `r format_dec(quantile(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot), 0.975), 3)`]; mean P~Red~ = `r format_dec(mean(c(probright_grCORTCold, probright_grControlCold, probright_grCORTHot, probright_grControlHot)), 3)`, 95% CI P~Red~ = [`r format_dec(quantile(c(probright_grCORTCold, probright_grControlCold, probright_grCORTHot, probright_grControlHot), 0.025), 3)` , `r format_dec(quantile(c(probright_grCORTCold, probright_grControlCold, probright_grCORTHot, probright_grControlHot), 0.975), 3)`]). However, the difference was not significant (Contrast between probabilities: P~Blue~ - P~Red~ = `r format_dec(mean(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot)) - mean(c(probright_grCORTCold, probright_grControlCold, probright_grCORTHot, probright_grControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot) - c(probright_grCORTCold, probright_grControlCold, probright_grCORTHot, probright_grControlHot)), 3)`, see @fig-guich).  

Decision-making by _L. guichenoti_ when the red ramps are the correct choice, was not affected by the hormone treatment (P~Control~ - P~CORT~ = `r format_dec(mean(c(probright_grControlCold, probright_grControlHot)) - mean(c(probright_grCORTCold, probright_grCORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_grControlCold, probright_grControlHot) - c(probright_grCORTCold, probright_grCORTHot)), 3)`), temperature treatment (P~Hot~ - P~Cold~ = `r format_dec(mean(c(probright_grControlHot, probright_grCORTHot)) - mean(c(probright_grControlCold, probright_grCORTCold)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_grControlHot, probright_grCORTHot) - c(probright_grControlCold, probright_grCORTCold)), 3)`) or their interaction ([(P~Control-Hot~ - P~CORT-Hot~) - (P~Control-Cold~ - P~CORT-Cold~)] = `r format_dec(mean(probright_grControlHot - probright_grCORTHot) - mean(probright_grControlCold - probright_grCORTCold), 3)`, p~mcmc~ `r format_p(pmcmc(probright_grControlHot - probright_grCORTHot - (probright_grControlCold - probright_grCORTCold)), 3)`; see @fig-guich A). When blue ramps were the correct choice, neither CORT (β~Control~ - β~CORT~ = `r format_dec(mean(c(probright_gbControlCold, probright_gbControlHot)) - mean(c(probright_gbCORTCold, probright_gbCORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_gbControlCold, probright_gbControlHot) - c(probright_gbCORTCold, probright_gbCORTHot)), 3)`) incubation temperature (β~Hot~ - β~Cold~ = `r format_dec(mean(c(probright_gbControlHot, probright_gbCORTHot)) - mean(c(probright_gbControlCold, probright_gbCORTCold)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_gbControlHot, probright_gbCORTHot) - c(probright_gbControlCold, probright_gbCORTCold)), 3)`; ), or their interaction ([(P~Control-Hot~ - P~CORT-Hot~) - (P~Control-Cold~ - P~CORT-Cold~)] = `r format_dec(mean(probright_gbControlHot - probright_gbCORTHot) - mean(probright_gbControlCold - probright_gbCORTCold), 3)`) have significant effects (@fig-guich D).   

```{r, fig-deli}
#| label: fig-deli
#| fig.cap: "Results for Lampropholis delicata for both color groups red (A, B, C) and blue (D, E, F). Panels A and D show the predicted probability of choosing the correct ramp in the first trial (Decision first trial). In panels B and E, the distribution of the estimates of slopes per each treatment. In all A, B, D, and E the x-axis represents the slope estimate, and in the y-axis are the density of the estimates. The different colors indicate the different treatments. Points and bars represent the mean and standard deviation of the mean of the estimates, respectively. Dashed lines indicate value 0.33 (the probability of choosing correctly by chance) in panels A, D, and 0 in panels B, E. Asterisks indicate significant results (p~mcmc~ < 0.05). Panels C and F show the predicted probability of choosing the correct ramp first over trials. The lines represent the mean predicted probability of choosing the correct ramp for each trial, and the shaded areas indicate the standard deviation of the mean; both were obtained using the slope and intercept estimates from the posterior distributions. The different colors indicate the different treatments."
source(here("R", "func.R"))
# First step, create the dfs for all models
## Red
fig_dar_prob_df <- df_plotprob("deli_red")
fig_dar_choiceviol_df <- df_plotviol("deli_red", "choice")
fig_dar_choicepoints_df <- df_plotpoints("deli_red", "choice")
fig_dar_sloviol_df <- df_plotviol("deli_red", "slope")
fig_dar_slopoints_df <- df_plotpoints("deli_red", "slope")
## Blue
fig_dab_choiceviol_df <- df_plotviol("deli_blue", "choice")
fig_dab_choicepoints_df <- df_plotpoints("deli_blue", "choice")
fig_dab_sloviol_df <- df_plotviol("deli_blue", "slope")
fig_dab_slopoints_df <- df_plotpoints("deli_blue", "slope")
fig_dab_prob_df <- df_plotprob("deli_blue")
#
# Second step, create the plots
fig_dar <- plotting(sp = "deli", col = "red", 
                    df_violin_1 = fig_dar_choiceviol_df, df_points_1 = fig_dar_choicepoints_df, 
                    df_violin_2 = fig_dar_sloviol_df, df_points_2 = fig_dar_slopoints_df,
                    df_prob = fig_dar_prob_df) +
          annotate("text", x = 0.42, y = c(0.29,0.48,0.68,0.87), label = "*", size = 8, color = "black")
fig_dab <- plotting(sp = "deli", col = "blue",
                    df_violin_1 = fig_dab_choiceviol_df, df_points_1 = fig_dab_choicepoints_df,
                    df_violin_2 = fig_dab_sloviol_df, df_points_2 = fig_dab_slopoints_df,
                    df_prob = fig_dab_prob_df) +
          annotate("text", x = 0.2, y = c(0.29,0.48,0.68,0.87), label = "*", size = 8, color = "black") +
          annotate("text", x = 0.42, y = 0.87, label = "*", size = 8, color = "black")
#
# Third step, merge plots
fig_deli <- plot_grid(fig_dar, fig_dab, ncol = 1) +
  theme(plot.margin = margin(1, 1, 1.5, 1, "cm")) +
  annotate("text", x = 0.5, y = 0.985, label = "Lampropholis delicata", size = 4.5, color = "black", fontface = "italic")
ggsave("./output/figures/fig_deli.png", plot=fig_deli, width = 28, height = 22, units = "cm", dpi = 600)
knitr::include_graphics("./output/figures/fig_deli.png")
```

#### Early developmental environments do not impact the rates of learning across species  

_Lampropholis delicata_: Learning rates for those _L. delicata_ assigned to red ramps did not show any significant effects of CORT (β~Control~ - β~CORT~ = `r format_dec(mean(c(dar_ControlCold, dar_ControlHot)) - mean(c(dar_CORTCold, dar_CORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(dar_ControlCold, dar_ControlHot) - c(dar_CORTCold, dar_CORTHot)), 3)`), incubation temperature (β~Hot~ - β~Cold~ = `r format_dec(mean(c(dar_ControlHot, dar_CORTHot)) - mean(c(dar_ControlCold, dar_CORTCold)), 3)`, p~mcmc~ `r format_p(pmcmc(c(dar_ControlHot, dar_CORTHot) - c(dar_ControlCold, dar_CORTCold)), 3)`), or their interaction ([(β~Control-Hot~ - β~CORT-Hot~) - (β~Control-Cold~ - β~CORT-Cold~)] = `r format_dec(mean(dar_ControlHot - dar_CORTHot) - mean(dar_ControlCold - dar_CORTCold), 3)`, p~mcmc~ `r format_p(pmcmc((dar_ControlHot - dar_CORTHot) - (dar_ControlCold - dar_CORTCold)), 3)`) (@fig-deli B, C). Similarly, those assigned to blue were also not affected by CORT (β~Control~ - β~CORT~ = `r format_dec(mean(c(dab_ControlCold, dab_ControlHot)) - mean(c(dab_CORTCold, dab_CORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(dab_ControlCold, dab_ControlHot) - c(dab_CORTCold, dab_CORTHot)), 3)`), temperature (β~Hot~ - β~Cold~ = `r format_dec(mean(c(dab_ControlHot, dab_CORTHot)) - mean(c(dab_ControlCold, dab_CORTCold)), 3)`, p~mcmc~ `r format_p(pmcmc(c(dab_ControlHot, dab_CORTHot) - c(dab_ControlCold, dab_CORTCold)), 3)`), or their interaction ([(β~Control-Hot~ - β~CORT-Hot~) - (β~Control-Cold~ - β~CORT-Cold~)] = `r format_dec(mean(dab_ControlHot - dab_CORTHot) - mean(dab_ControlCold - dab_CORTCold), 3)`, p~mcmc~ `r format_p(pmcmc((dab_ControlHot - dab_CORTHot) - (dab_ControlCold - dab_CORTCold)), 3)`) (@fig-deli E, F).  

_Lampropholis guichenoti_: Learning rates in _L. guichenoti_ were not influenced by hormone treatment (β~Control~ - β~CORT~ = `r format_dec(mean(c(gar_ControlCold, gar_ControlHot)) - mean(c(gar_CORTCold, gar_CORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(gar_ControlCold, gar_ControlHot) - c(gar_CORTCold, gar_CORTHot)), 3)`), temperature treatment (β~Hot~ - β~Cold~ = `r format_dec(mean(c(gar_ControlHot, gar_CORTHot)) - mean(c(gar_ControlCold, gar_CORTCold)), 3)`, p~mcmc~ `r format_p(pmcmc(c(gar_ControlHot, gar_CORTHot) - c(gar_ControlCold, gar_CORTCold)), 3)`), or their interaction ([(β~Control-Hot~ - β~CORT-Hot~) - (β~Control-Cold~ - β~CORT-Cold~)] = `r format_dec(mean(gar_ControlHot - gar_CORTHot) - mean(gar_ControlCold - gar_CORTCold), 3)`, p~mcmc~ `r format_p(pmcmc((gar_ControlHot - gar_CORTHot) - (gar_ControlCold - gar_CORTCold)), 3)`) when red ramps were the correct choice (@fig-guich B, C). Similarly, CORT (β~Control~ - β~CORT~ = `r format_dec(mean(c(gab_ControlCold, gab_ControlHot)) - mean(c(gab_CORTCold, gab_CORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(gab_ControlCold, gab_ControlHot) - c(gab_CORTCold, gab_CORTHot)), 3)`), incubation temperature (β~Hot~ - β~Cold~ = `r format_dec(mean(c(gab_ControlHot, gab_CORTHot)) - mean(c(gab_ControlCold, gab_CORTCold)), 3)`, p~mcmc~ `r format_p(pmcmc(c(gab_ControlHot, gab_CORTHot) - c(gab_ControlCold, gab_CORTCold)), 3)`), or their interaction ([(β~Control-Hot~ - β~CORT-Hot~) - (β~Control-Cold~ - β~CORT-Cold~)] = `r format_dec(mean(gab_ControlHot - gab_CORTHot) - mean(gab_ControlCold - gab_CORTCold), 3)`, p~mcmc~ `r format_p(pmcmc((gab_ControlHot - gab_CORTHot) - (gab_ControlCold - gab_CORTCold)), 3)`) were not significant for _L. guichenoti_ assigned to blue ramps (see @fig-guich E, F).  

```{r, fig-guich}
#| label: fig-guich
#| fig.cap: "Results for Lampropholis guichenoti for both color groups red (A, B, C) and blue (D, E, F). Panels A and D show the predicted probability of choosing the correct ramp in the first trial (Decision first trial). In panels B and E, the distribution of the estimates of slopes per each treatment. In all A, B, D, and E the x-axis represents the slope estimate, and in the y-axis are the density of the estimates. The different colors indicate the different treatments. Points and bars represent the mean and standard deviation of the mean of the estimates, respectively. Dashed lines indicate value 0.33 (the probability of choosing correctly by chance) in panels A, D, and 0 in panels B, E. Asterisks indicate significant results (p~mcmc~ < 0.05). Panels C and F show the predicted probability of choosing the correct ramp first over trials. The lines represent the mean predicted probability of choosing the correct ramp for each trial, and the shaded areas indicate the standard deviation of the mean; both were obtained using the slope and intercept estimates from the posterior distributions. The different colors indicate the different treatments."
source(here("R", "func.R"))
# First step, create the dfs for all models
## Red
fig_gar_choiceviol_df <- df_plotviol("guich_red", "choice")
fig_gar_choicepoints_df <- df_plotpoints("guich_red", "choice")
fig_gar_sloviol_df <- df_plotviol("guich_red", "slope")
fig_gar_slopoints_df <- df_plotpoints("guich_red", "slope")
fig_gar_prob_df <- df_plotprob("guich_red")
## Blue
fig_gab_choiceviol_df <- df_plotviol("guich_blue", "choice")
fig_gab_choicepoints_df <- df_plotpoints("guich_blue", "choice")
fig_gab_sloviol_df <- df_plotviol("guich_blue", "slope")
fig_gab_slopoints_df <- df_plotpoints("guich_blue", "slope")
fig_gab_prob_df <- df_plotprob("guich_blue")
#
# Second step, create the plots
fig_gar <- plotting(sp = "guich", col = "red", 
                    df_violin_1 = fig_gar_choiceviol_df, df_points_1 = fig_gar_choicepoints_df, 
                    df_violin_2 = fig_gar_sloviol_df, df_points_2 = fig_gar_slopoints_df,
                    df_prob = fig_gar_prob_df) +
          annotate("text", x = 0.42, y = c(0.29,0.48,0.68,0.87), label = "*", size = 8, color = "black")
fig_gab <- plotting(sp = "guich", col = "blue",
                    df_violin_1 = fig_gab_choiceviol_df, df_points_1 = fig_gab_choicepoints_df,
                    df_violin_2 = fig_gab_sloviol_df, df_points_2 = fig_gab_slopoints_df,
                    df_prob = fig_gab_prob_df) +
          annotate("text", x = 0.2, y = c(0.48,0.87), label = "*", size = 8, color = "black")  +
          annotate("text", x = 0.42, y = c(0.29,0.68,0.87), label = "*", size = 8, color = "black")
#
# Third step, merge plots
fig_guich <- plot_grid(fig_gar, fig_gab, ncol = 1) +
  theme(plot.margin = margin(1, 1, 1.5, 1, "cm")) +
  annotate("text", x = 0.5, y = 0.985, label = "Lampropholis guichenoti", size = 4.5, color = "black", fontface = "italic")
ggsave("./output/figures/fig_guich.png", plot=fig_guich, width = 25, height = 20, units = "cm", dpi = 600)
knitr::include_graphics("./output/figures/fig_guich.png")
```

#### Contrasting impacts of early developmental environments on decision-making and learning in _Lampropholis delicata_ and _Lampropholis guichenoti_  

Overall, decision-making did not differ between species when the red ramps (mean P~_L. delicata_~ = `r format_dec(mean(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot)), 3)`, 95% CI P~_L. delicata_~ = [`r format_dec(quantile(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot), 0.025), 3)` , `r format_dec(quantile(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot), 0.975), 3)`]; mean P~_L. guichenoti_~ = `r format_dec(mean(c(probright_grCORTCold, probright_grControlCold, probright_grCORTHot, probright_grControlHot)), 3)`, 95% CI P~_L. guichenoti_~ = [`r format_dec(quantile(c(probright_grCORTCold, probright_grControlCold, probright_grCORTHot, probright_grControlHot), 0.025), 3)` , `r format_dec(quantile(c(probright_grCORTCold, probright_grControlCold, probright_grCORTHot, probright_grControlHot), 0.975), 3)`]; Contrast between probabilities: P~_L. delicata_~ - P~_L. guichenoti_~ = `r format_dec(mean(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot)) - mean(c(probright_grCORTCold, probright_grControlCold, probright_grCORTHot, probright_grControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot) - c(probright_grCORTCold, probright_grControlCold, probright_grCORTHot, probright_grControlHot)), 3)`) or the blue ramps were the correct choice (mean P~_L. delicata_~ = `r format_dec(mean(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot)), 3)`, 95% CI P ~_L. delicata_~ = [`r format_dec(quantile(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot), 0.025), 3)` , `r format_dec(quantile(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot), 0.975), 3)`]; mean P~_L. guichenoti_~ = `r format_dec(mean(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot)), 3)`, 95% CI P~_L. guichenoti_~ = [`r format_dec(quantile(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot), 0.025), 3)` , `r format_dec(quantile(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot), 0.975), 3)`]; P~_L. delicata_~ - P~_L. guichenoti_~ = `r format_dec(mean(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot)) - mean(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot) - c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot)), 3)`).  

We also found no significant differences in learning rates between species when the red ramp (mean β~_L. delicata_~ = `r format_dec(mean(c(dar_CORTCold, dar_ControlCold, dar_CORTHot, dar_ControlHot)), 3)`, 95% CI β~_L. delicata_~ = [`r format_dec(quantile(c(dar_CORTCold, dar_ControlCold, dar_CORTHot, dar_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(dar_CORTCold, dar_ControlCold, dar_CORTHot, dar_ControlHot), 0.975), 3)`]; mean β~_L. guichenoti_~ = `r format_dec(mean(c(gar_CORTCold, gar_ControlCold, gar_CORTHot, gar_ControlHot)), 3)`, 95% CI β~_L. guichenoti_~ = [`r format_dec(quantile(c(gar_CORTCold, gar_ControlCold, gar_CORTHot, gar_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(gar_CORTCold, gar_ControlCold, gar_CORTHot, gar_ControlHot), 0.975), 3)`]; Contrast between slopes: β~_L. delicata_~ - β~_L. guichenoti_~ = `r format_dec(mean(c(dar_CORTCold, dar_ControlCold, dar_CORTHot, dar_ControlHot)) - mean(c(gar_CORTCold, gar_ControlCold, gar_CORTHot, gar_ControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(dar_CORTCold, dar_ControlCold, dar_CORTHot, dar_ControlHot) - c(gar_CORTCold, gar_ControlCold, gar_CORTHot, gar_ControlHot)), 3)`) or blue ramp was the correct choice (mean β~_L. delicata_~ = `r format_dec(mean(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot)), 3)`, 95% CI β~_L. delicata_~ = [`r format_dec(quantile(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot), 0.975), 3)`]; mean β~_L. guichenoti_~ = `r format_dec(mean(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot)), 3)`, 95% CI β~_L. guichenoti_~ = [`r format_dec(quantile(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot), 0.975), 3)`]; Contrast between slopes: β~_L. delicata_~ - β~_L. guichenoti_~ = `r format_dec(mean(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot)) - mean(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot) - c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot)), 3)`).   


## Discussion

We predicted that elevated CORT levels in eggs or incubating them at colder temperatures would decrease learning rates, and that warmer incubation temperatures would suppress the negative effects of CORT on learning. In contrast to our predictions, both species learned to associate a color with a food reward at the same rate regardless of the experimental treatment. These findings suggest that both species may have developed mechanisms to buffer against early environmental stressors and maintain learning performance on colour-associative tasks despite prenatal challenges. While we did not find any effect of treatment on decision-making, there was a clear bias towards the color blue irrespective of the treatment, though this pattern differed between the species. We discuss the implications of these findings below.          
    
#### Learning is not impacted by prenatal corticosterone exposure   
Prenatal CORT was predicted to have a negative effect on learning [@lemaire_prenatal_2000; @zhu_prenatal_2004; @eaton2015mild; @farrell_developmental_2015-learn; @bebus_associative_2016]. However, we found no significant difference in learning rates between hormone treatments in either species. Our results are consistent with other experiments that showed no influence of prenatal GCs on learning abilities [@szuran_water_1994; @bebus_associative_2016; @farrell_developmental_2016] and suggest that _L. delicata_ and _L. guichenoti_ may have developed strategies to buffer the impacts of prenatal stress.  

Alternatively, our observations could be obscured by other variables that are known to influence the extent and direction of the effects of GCs [@szuran_water_1994; @crino_corticosterone_2014-learn; @farrell_developmental_2015-learn; @bebus_associative_2016; @farrell_developmental_2016]. GCs are known to have hormetic effects [@du_dynamic_2009]. Generally, low concentrations or short exposure to GCs have been shown to improve the rate at which animals learn while high concentrations or exposure to GCs during long periods have the opposite effects [@du_dynamic_2009; @mcewen_brain_2012]. Thus, high elevations in CORT could affect learning through permanent changes in brain function (programmatic effects), while lower doses can result in lifelong elevation of baseline CORT, affecting learning through activational effects. Our findings indicate that associative learning in _L. delicata_ and _L. guichenoti_ is robust to the programmatic effects of elevated CORT exposure. However, we cannot exclude the possibility that concentrations different from the one used here may affect learning abilities.  

Conversely, the absence of significant effects of prenatal CORT on learning could be due to the cognitive task employed. Some studies show that the impact of GCs can vary between brain regions [@lemaire_prenatal_2000]. GC actions involve genomic and nongenomic mechanisms that implicate different types of receptors that can be distributed differentially in the various regions of the brain [@mcewen_brain_2012], and may be related to the learning performance in distinct tasks. For instance, in European starlings (_Sturnus vulgaris_), males stressed during early stages of development performed worse in a visual associative learning task, but show no differences with control birds with acoustic stimuli [@farrell_developmental_2015-learn]. Similarly, scrub-jays (_Aphelocoma coerulescens_) with lower CORT levels as nestlings performed better on an associative learning test as adults but not on a reversal-learning task [@bebus_associative_2016]. Our results suggest that prenatal CORT does not affect the brain regions involved in coding associative learning in _L. delicata_ and _L. guichenoti_, but we cannot rule out the possibility that other cognitive domains, such as spatial learning, might be affected. Future studies should examine the differential effects of early-life stress on different cognitive domains.  

#### Incubation temperature does not affect learning
We predicted hot-incubated lizards would perform better in the associative learning task, since most studies demonstrate enhanced learning abilities when eggs are incubated at higher temperatures [@amiel_hotter_2012; @amiel_egg_2014; @clark_colour_2014]. While the opposite pattern has been found in some studies, their incubation temperatures were far above the natural thermal range of the species in their hot treatments [@dayananda_incubation_2017; @abayarathna_effects_2020]. As such, it is unclear how such these extreme conditions relate to wild environments. In _L. delicata_ and _L. guichenoti_, associative learning appears robust to incubation temperature because of the lack of detectable effect temperature had on learning. Our results, therefore, do not align with previous studies. However, the effect of prenatal temperature on cognition, and brain physiology and structure has been investigated only in a small number of species [see @coomber_independent_1997; @sakata_neural_2000; @amiel_hotter_2012; @amiel_egg_2014; @clark_colour_2014; @amiel_effects_2017; @dayananda_incubation_2017; @abayarathna_effects_2020], limiting our understanding on how early thermal environment can affect cognitive abilities. Our results suggest that the impact of incubation temperature on learning may not be as widespread across reptiles as we think.    

#### Visual-sensory bias is not dependent on early environment    
We found strong evidence for a visual/sensory bias towards choosing the blue feeding ramp during the initial stages of decision-making. While this effect appeared stronger in _L. delicata_ compared to _L. guichenoti_, the bias did not result from experiencing different early environmental conditions. What created an initial bias towards blue? One possibility might be that the bias towards blue ramps was a byproduct of the training phase where the blue ramp was more similar to the white training ramp than the green or red ramps. However, this hypothesis is unlikely given that the light spectrum and the perceived chromatic differences between the ramps used in the associative task and the ones used during training phase meant that the white training phase ramp was more similar to the green color rather than blue (see _Supplementary Material_). It seems more likely that lizards innately prefer the blue ramps. Some animals bias their attention towards colors they are familiar with [@putman2017fear - the ‘species confidence hypothesis’]. For instance, dark and light blue T-shirts were associated with lower flight initiation distances and higher capture rates in Western fence lizards where blue is used in intraspecific communication [@putman2017fear]. Nevertheless, to the best of our knowledge, there has been no reported color bias in _L. delicata_ or _L. guichenoti_ before; and blue coloration is not considered to be involved in intraspecific communication in these species [@torr1996patterns; @chapple_biology_2014]. Regardless, our results demonstrate that, at least in _L. delicata_, there is a bias toward blue colors, highlighting the need to consider the colors used in associative learning paradigms carefully.

#### Learning rates between species did not vary  
We did not see any difference in learning rates when comparing both species. This result supports previous studies that found similar learning abilities in _L. delicata_ and _L. guichenoti_ [@bezzina2014does]. In the experiment conducted by @bezzina2014does, both species failed to complete the associative learning task under the authors' criterion, while in our experiment, both species completed the task, exhibiting similar learning rates. Complexity, experimental design, or the criterion employed to define learning could be the major cause of the discrepancies between ours and @bezzina2014does. Developing common strategies and approaches to assess animal learning could help understand how learning abilities are shaped in different taxa or environments.  
 
#### Conclusion
Our results revealed that associative learning abilities and decision-making in _L. delicata_ and _L. guichenoti_ are resilient to prenatal CORT and temperature. This outcome contrasts with our initial predictions, indicating that the learning skills of these lizards may be more robust than anticipated under varying early life conditions. We also found significant effects of the color employed in the task on learning rates in most _L. delicata_ and some _L. guichenoti_. These results seem to be a consequence of an innate color bias and highlight the importance of carefully selecting the color employed when testing cognition using visual stimuli. 

Future research should continue exploring the potential effects of prenatal corticosterone (CORT) and temperature on other cognitive functions. Furthermore, it is crucial to explore how these treatments influence brain function at a neurological level. Investigating these aspects will help us understand these species' cognitive and physiological mechanisms underpinning adaptability and offer insights into how early developmental factors shape long-term cognitive outcomes.  

## Data accessibility
All data, data description, and R code are available in public repository [https://github.com/Pablo-Recio/CORT_Temp_learning](https://github.com/Pablo-Recio/CORT_Temp_learning).

## Satements and declarations  
#### Competing Interests  
We declare we have no competing interests  

#### Conflict of Interest  
We declare we have no conflict of interest   

#### Ethical Approval  
All experimental procedures and laboratory housing complied with Australian law and were approved by the Australian National University Animal Experimentation Ethics Committee (A2022_33).  


## Authors’ contributions
PR: conceptualization, methodology, data collection, data curation, formal analysis, writing—original draft, writing—review and editing; DCL: data collection, writing—review and editing; OC: conceptualization, methodology, writing—review and editing; KW: conceptualization, writing—review and editing; CRF: conceptualization, methodology, funding acquisition, writing—review and editing; BM: data collection, writing—review and editing; AP: data collection, writing—review and editing; DN: conceptualization, methodology, funding acquisition, project administration, resources, supervision, writing—review and editing.
All authors gave final approval for publication and agreed to be held accountable for the work performed therein.

## Funding
This work was supported by a National Australian University fellowship (PR), the Australian Research Council (grant no. DP210101152) to DN and CRF, and the ACT Herpetological Association grant to PR.

## Acknowledgements
We thank the help and assistance of our lab technicians Benjamin Durant and Michelle Stephens for taking care of the lizards. We are also grateful to ACTHA for the grant for the 3D printed ramps, and we also thank ANU MakerSpace, where we designed and built the prototypes of the 3D printed ramps. Finally, we wish to acknowledge the anonymous reviewers for their valuable feedback on the manuscript.


## References
<div id="refs"></div>

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

# Suplementary Material

#### Estimates of learning rates for all the different treatments per each task, species, and group.
Table 1. Estimates of learning rates for all the different treatments per each task, species, and group. Mean shows the arithmetic means of the estimates obtained from the posteriors of the model, and 95% CI indicates the 95% confidence interval of the mean. All p~mcmc~ tested the hypothesis that the mean equals zero. In bold, those values that are significant (p~mcmc~ <0.05).

```{r, tbl-data, results='asis'}
#| label: tbl-data
#| tbl-cap: "Estimates of learning rates for all the different treatments per each task, species, and group. Mean shows the arithmetic means of the estimates obtained from the posteriors of the model, and 95% CI indicates the 95% confidence interval of the mean. All pmcmc tested the hypothesis that the mean equals zero. In bold, those values that are significant (pmcmc <0.05)"
source("./R/func.R")
#
# Modyfying a parameter for later (see p_format function in func.R)
equal <- FALSE
############################## CREATING BIG DF FOR TABLE ##############################
# Building the vectors for titles of rows and columns
specie <- c("L. delicata", "L. guichenoti")
group <- c("Red", "Blue")
treatments <- c("CORT-Cold", "Control-Cold", "CORT-Hot", "Control-Hot")
values <- c("Mean", "95% CI", "pmcmc")
# Building the vectors for estimated means, co.intervals(95%), and pmcmc for the slopes obtained from posteriors, assuming a two-tailed test that testes the hypothesis that the value (slopes in this case) is 0.
#First get estimates for both tasks
estimates <- list(
  dar_CORTCold, dar_ControlCold, dar_CORTHot, dar_ControlHot,
  dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot,
  gar_CORTCold, gar_ControlCold, gar_CORTHot, gar_ControlHot,
  gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot
)
#
# Then get the mean, co.intervals(95%), and pmcmc
mean <- format_dec(sapply(estimates, mean), 3)
interval_025 <- format_dec(sapply(estimates, function(x) quantile(x,0.025)), 3)
interval_975 <- format_dec(sapply(estimates, function(x) quantile(x,0.975)), 3)
intervals <- paste0("[", interval_025, " , ", interval_975, "]")
Pmcmc <- format_p(sapply(estimates, pmcmc), 4)
#
# Building the df
table_df <- data.frame(
  Species = rep(specie, each = length(group) * length(treatments)),
  Group = rep(rep(group, each = length(treatments)), times = length(specie)),
  Treatment = rep(treatments, times = length(specie) * length(group)),
  Mean = mean,          # 'mean' vector directly
  CI = intervals,       # 'intervals' vector directly
  pmcmc = Pmcmc         # 'Pmcmc' vector directly
) %>%
  pivot_wider(names_from = Group, values_from = c(Mean, CI, pmcmc)) %>% #To divide by color
  select(Species, Treatment, Mean_Red, CI_Red, pmcmc_Red, Mean_Blue, CI_Blue, pmcmc_Blue) %>% #To order the columns in the way I want for the table
data.frame()
#
############################## MAKING THE TABLE ##############################
## Table format
set_flextable_defaults(
 font.family = "Times New Roman",
 font.size = 10)
# Create some objects to use in the table
bold_red <- table_df$pmcmc_Red == "< 0.05" | table_df$pmcmc_Red == "< 0.001"
bold_blue <- table_df$pmcmc_Blue == "< 0.05" | table_df$pmcmc_Blue == "< 0.001" 
# Make table
real_table <- flextable(table_df) %>%
    bold(i = which(bold_red), j = c("pmcmc_Red", "Mean_Red", "CI_Red"), part = "body") %>%
    bold(i = which(bold_blue), j = c("pmcmc_Blue", "Mean_Blue", "CI_Blue"), part = "body") %>%
    set_table_properties(width = 1) %>%
    align(align="center", part="all") %>% 
    add_header_row(values = c("", "Red", "Blue"), colwidths = c(2, 3, 3)) %>%
    set_header_labels(Mean_Red = "Mean",
                      CI_Red = "95% CI",
                      pmcmc_Red = "pmcmc",
                      Mean_Blue = "Mean",
                      CI_Blue = "95% CI",
                      pmcmc_Blue = "pmcmc") %>%
    italic(i= c(1, 5), j = 1, italic = TRUE, part = "body") %>% # To have names of species in italics
    flextable::compose(i = c(2:4,6:8), j = 1, value = as_paragraph(""), part = "body") %>% # To remove some of the values in the first column
    hline(i = 4, j = c(1:8), part = "body") %>% # To make some horizontal lines
    vline(j = c(2,5), part = "all") %>% # To make some vertical lines
    autofit() 
real_table
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Color preference
To test if lizards were biased towards the assigned color as our preliminary analyses suggested, we employed the values from our posterior distributions. We estimated the predicted probability of choosing the correct ramp first in the first trial (see Statistical analyses) and tested the hypothesis that this estimated probability was higher than expected by chance (i.e. 0.33) using p~mcmc~. If the estimated probability is above 0.33 we consider it as an indication that there was a preference towards that color that could be affecting learning rates.  

Table 2. Probability of choosing the correct ramp in the first trial when the correct ramp was blue (Prob Blue) or red (Prob Red) for each species and each treatment. p~mcmc~ tested the hypothesis that the probability is >0.33. In bold, those values that are significant (p~mcmc~ <0.05)
```{r, tbl-bias}
#| label: tbl-bias
#| tbl-cap: "Probability of choosing the correct ramp in the first trial when the correct ramp was blue (Prob Blue) or red (Prob Red) for each species and each treatment. p~mcmc~ tested the hypothesis that the probability is >0.33. In bold, those values that are significant (p~mcmc~ <0.05)"
source(here("R", "func.R"))
#
# Modyfying a parameter for later (see p_format function in func.R)
equal <- FALSE
# First we build a df with all the mean probabilities of choosing right in the first trial for each treatment and species (see results chunk)
prob_df <- data.frame(
  probright_drCORTCold_t = format_dec(mean(probright_drCORTCold), 3),
  probright_drControlCold_t = format_dec(mean(probright_drControlCold), 3),
  probright_drCORTHot_t = format_dec(mean(probright_drCORTHot), 3),
  probright_drControlHot_t = format_dec(mean(probright_drControlHot), 3),
  probright_dbCORTCold_t = format_dec(mean(probright_dbCORTCold), 3),
  probright_dbControlCold_t = format_dec(mean(probright_dbControlCold), 3),
  probright_dbCORTHot_t = format_dec(mean(probright_dbCORTHot), 3),
  probright_dbControlHot_t = format_dec(mean(probright_dbControlHot), 3),
  probright_grCORTCold_t = format_dec(mean(probright_grCORTCold), 3),
  probright_grControlCold_t = format_dec(mean(probright_grControlCold), 3),
  probright_grCORTHot_t = format_dec(mean(probright_grCORTHot), 3),
  probright_grControlHot_t = format_dec(mean(probright_grControlHot), 3),
  probright_gbCORTCold_t = format_dec(mean(probright_gbCORTCold), 3),
  probright_gbControlCold_t = format_dec(mean(probright_gbControlCold), 3),
  probright_gbCORTHot_t = format_dec(mean(probright_gbCORTHot), 3),
  probright_gbControlHot_t = format_dec(mean(probright_gbControlHot), 3)) %>%
gather(key = "column", value = "value", .) %>%
rename("prob_choice" = "value") %>%
data.frame()
write.csv(prob_df, file= "./output/Checking/prob_df.csv")
# Then we build a df with the statistical test (one-tailed pmcmc) that the probability is >0.33 (the probability of choosing right by chance)
comp_pval <- data.frame(
  probright_drCORTCold_t = format_p(pmcmc(probright_drCORTCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_drControlCold_t = format_p(pmcmc(probright_drControlCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_drCORTHot_t = format_p(pmcmc(probright_drCORTHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_drControlHot_t = format_p(pmcmc(probright_drControlHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_dbCORTCold_t = format_p(pmcmc(probright_dbCORTCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_dbControlCold_t = format_p(pmcmc(probright_dbControlCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_dbCORTHot_t = format_p(pmcmc(probright_dbCORTHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_dbControlHot_t = format_p(pmcmc(probright_dbControlHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_grCORTCold_t = format_p(pmcmc(probright_grCORTCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_grControlCold_t = format_p(pmcmc(probright_grControlCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_grCORTHot_t = format_p(pmcmc(probright_grCORTHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_grControlHot_t = format_p(pmcmc(probright_grControlHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_gbCORTCold_t = format_p(pmcmc(probright_gbCORTCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_gbControlCold_t = format_p(pmcmc(probright_gbControlCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_gbCORTHot_t = format_p(pmcmc(probright_gbCORTHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_gbControlHot_t = format_p(pmcmc(probright_gbControlHot, null = 0.33, twotail = FALSE, dir=">"), 3)) %>%
gather(key = "column", value = "value", .) %>%
rename("p_value" = "value") %>%
data.frame()
write.csv(comp_pval, file= "./output/Checking/comp_pval.csv")
# Now we merge them and organise them to have the final dt for the table
table_df <- merge(prob_df, comp_pval, by ="column") %>%
  mutate(Species = gsub(".*_(d|g).*", "\\1",column)) %>%
  mutate(Group = gsub(".*_(dr|db|gr|gb).*", "\\1",column)) %>%
  mutate(Treatment = gsub(".*(CORTCold|ControlCold|CORTHot|ControlHot).*", "\\1",column)) %>% #Last three commands used to get the species, group and treatment from the column names
  mutate(Treatment = factor(Treatment, 
                    levels = c("CORTCold", "ControlCold", "CORTHot", "ControlHot"),
                    labels = c("CORTCold" = "CORT-Cold", "ControlCold" = "Control-Cold", "CORTHot" = "CORT-Hot", "ControlHot" = "Control-Hot"))) %>%
  mutate(Species = factor(Species,
                levels = c("d", "g"),
                labels = c("d" = "L. delicata", "g" = "L. guichenoti"))) %>%
  mutate(Group = recode(Group, "dr" = "Red", "db" = "Blue", "gr" = "Red", "gb" = "Blue")) %>%
  select(-column) %>%
  pivot_wider(names_from = Group, values_from = c(prob_choice, p_value)) %>% #To split the df in Red and Blue
  select(Species, Treatment, prob_choice_Red, p_value_Red, prob_choice_Blue, p_value_Blue) %>%
  arrange(Species, Treatment) %>% # To arrange the rows the way I wantdata.frame()
data.frame()
write.csv(table_df, file= "./output/Checking/table_df.csv")
#################
color_table <- flextable(table_df) %>%
  bold(~ `p_value_Blue` < 0.05, ~ `p_value_Blue` + prob_choice_Blue) %>%
  bold(~ `p_value_Red` < 0.05, ~ `p_value_Red` + prob_choice_Red) %>%
  set_table_properties(width = 1) %>%
  align(align="center", part="all") %>% 
  set_header_labels(prob_choice_Blue = "Prob Blue", 
                    p_value_Blue = "pmcmc Blue", 
                    prob_choice_Red = "Prob Red", 
                    p_value_Red = "pmcmc Red") %>%
  italic(j = 1, italic = TRUE, part = "body") %>% # To have names of species in italics
  flextable::compose(i = c(2:4,6:8), j = 1, value = as_paragraph(""), part = "body") %>% # To remove some of the values in the first column
  hline(i = c(4), j = c(1:6), part = "body") %>% # To make some horizontal lines
  vline(j = c(2,4), part = "all") %>% # To make some vertical lines on body
autofit()
color_table
#
# Modyfying a parameter for later (see p_format function in func.R)
equal <- TRUE
```

On average, we found that, for both species, the proportion of correct choices in the first trial was significantly above chance when the correct ramp was blue for _L. delicata_ (mean Prob choice = `r format_dec(mean(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot), null = 0.33, twotail = FALSE, dir=">"), 3)`) but not for _L. guichenoti_ (mean Prob choice = `r format_dec(mean(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot), null = 0.33, twotail = FALSE, dir=">"), 3)`). When the correct choice was red, it was not significant for neither species (_L. delicata_: mean Prob choice = `r format_dec(mean(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot), null = 0.33, twotail = FALSE, dir=">"), 3)`; _L. guichenoti_: mean Prob choice = `r format_dec(mean(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot), null = 0.33, twotail = FALSE, dir=">"), 3)`).  

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Light spectrum
To test if the bias towards blue was something acquired during training, we compared the light spectrum of the ramps used in the associative task and the white ones used during habituation. We took three measurements of ten ramps per color with a spectophotometer, and then analyzed the spectrum and the perceived differences in color using the package pavo. The spetrum of each type of ramp are shown in @fig-spectrum; the perceived chromatic constrasts between ramps are shown in @fig-perceived1 and @fig-perceived2.  
```{r, fig-spectrum}
#| label: fig-spectrum
#| fig.cap: "Light spectrum of the ramps used in the associative task and the white ones used during habituation. The different colors represent the different ramps."
#
# Load required packages
pacman::p_load(pavo,plotrix,plyr,MCMCglmm,Hmisc,DIZutils)
#
# For importing the files, change the extension of the .jaz files to .txt files!  
# Import spec data for pablos ramps - CHNAGE TO WHERE YOUR FILES ARE LOCATED
specs <- getspec("./Others/Feeders", lim = c(300,700), ext = 'txt') %>%
  procspec(specs, opt = "smooth" , span = 0.2, fixneg = "addmin") 
# Plot smoothed raw data as reflectance curve with approximate rgb colors
plot(specs, type = "o", col = spec2rgb(specs))
```

```{r, fig-perceived1}
#| label: fig-perceived1
#| fig.cap: "Perceived chromatic contrasts between ramps."
#
## Processing the data with the lizard visual model 
# Processing using lizard vision model provided for Dan and Martin's Phyrnocephalus mystaceus paper
liz_vis <- sensmodel(c(360, 440, 493, 571)) 
#
# Apply this over the ramp data visual as the visual system, achromatic is the receptor sensitivity, illum is the illuminate (here using an ideal white illuminate preset), bkg is the background against which we are measuring (here using an ideal background with no influence). Other conditions are applied as used in the P mystaceus paper.
# Does produce an error about luminance but this is noted on the original P mystaceus paper code and should be okay
# summary(ramps_lizardview) can be used to check what conditions were applied in the visual model
feeders_lizardview <- vismodel(specs, visual = liz_vis, achromatic = "l", illum = "ideal", bkg = "ideal", vonkries = TRUE,   relative = FALSE, qcatch = "fi")
#                             
# Calculate color distances between all ramp measurements
coldistance_feeders <- coldist(feeders_lizardview,achro = TRUE, noise = "neural", n = c(1, 1, 3.5, 6),  weber = 0.1)
#
# Name all contrasts e.g white/green to categorise them
annotated_coldistance_feeders <- coldistance_feeders %>%
  separate(patch1, into = c("color1", "number1"), sep = "_") %>%
  separate(patch2, into = c("color2", "number2"), sep = "_") %>%
  mutate(color_comparison = paste0(color1, "/", color2)) %>%
  mutate(color_comparison = paste0(pmin(color1, color2), "/", pmax(color1, color2))) %>% # Remove duplicate categories(e.g white/green is the same as green/white and all are called green/white)
  subset(!(color_comparison %in% c("B/B", "G/G", "R/R", "W/W")))
#
# Plot the color differences between the ramps: 
# Note - above 1 is expected to be visually different under the selected visual system (here, lizard view)
# dS, or chromatic contrast
dScomparisons <- ggplot(annotated_coldistance_feeders, aes(x = color_comparison, y = dS, fill = color_comparison)) + 
  geom_boxplot() + 
  theme_classic() +
  ylab("Chromatic Contrast (dS)") +
  xlab("ramp colors Comparison") +
 scale_fill_manual(values =c("B/G" = 'steelblue',  "B/R" = 'purple', "B/W" = 'lightblue', "G/R" = 'brown', "G/W" = 'lightgreen', "R/W" = 'red')) +
 theme(plot.margin = margin(5.5, 5.5, 5.5, 5.5, "mm")) + 
  theme(
    axis.title = element_text(size = 13, family = "Times New Roman"),
    axis.text = element_text(size = 10, family = "Times New Roman"),
    legend.title = element_text(size = 12, family = "Times New Roman"),
    legend.text = element_text(size = 10, family = "Times New Roman"),
    strip.text = element_text(size = 13, family = "Times New Roman")
  ) 
print(dScomparisons)
```

```{r, fig-perceived2}
#| label: fig-perceived2
#| fig.cap: "Perceived achromatic contrasts between feeders."
#dL, or achromatic contrast
dLcomparisons <- ggplot(annotated_coldistance_feeders, aes(x = color_comparison, y = dL, fill = color_comparison)) + 
  geom_boxplot() + 
  theme_classic() +
  ylab("Achromatic Contrast (dL)") +
  xlab("ramp colors Comparison") +
 scale_fill_manual(values =c("B/G" = 'steelblue',  "B/R" = 'purple', "B/W" = 'lightblue', "G/R" = 'brown', "G/W" = 'lightgreen', "R/W" = 'red')) +
 theme(plot.margin = margin(5.5, 5.5, 5.5, 5.5, "mm")) + 
  theme(
    axis.title = element_text(size = 13, family = "Times New Roman"),
    axis.text = element_text(size = 10, family = "Times New Roman"),
    legend.title = element_text(size = 12, family = "Times New Roman"),
    legend.text = element_text(size = 10, family = "Times New Roman"),
    strip.text = element_text(size = 13, family = "Times New Roman")
  )
print(dLcomparisons)
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Checking the models plots  
```{r, residuals}
# Chunk for calling all the models and making the residuals
## L. delicata
### Red
mod_dar <- readRDS("./output/models/deli_red.rds")
resid_dar <- residuals(mod_dar)
### Blue
mod_dab <- readRDS("./output/models/deli_blue.rds")
resid_dab <- residuals(mod_dab)
## L. guichenoti
### Red
mod_gar <- readRDS("./output/models/guich_red.rds")
resid_gar <- residuals(mod_gar)
### Blue
mod_gab <- readRDS("./output/models/guich_blue.rds")
resid_gab <- residuals(mod_gab)
```

Model formula for task is:  
Choice  ~ Trial * cort * temp + (1 + Trial|lizard_id)  
Plots for the different models of the associative task:  
1.- _L. delicata_  
  1.a.- Red  
```{r , plotmod_dar, out.width="70%", fig.align="center"}
bayes_R2(mod_dar)
plot(mod_dar)
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

  1.b.- Blue  
```{r , plotmod_dab, out.width="70%", fig.align="center"}
bayes_R2(mod_dab)
plot(mod_dab)
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

2.- _L. guichenoti_  
  2.a.- Red  
```{r , plotmod_gar, out.width="70%", fig.align="center"}
bayes_R2(mod_gar)
plot(mod_gar)
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

  2.b.- Blue  
```{r , plotmod_gab, out.width="70%", fig.align="center"}
bayes_R2(mod_gab)
plot(mod_gab)
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Models with age included

```{r, modelsage}
#| label: modelsage
# Fitting the models for L. delicata and L. guichenoti including age as a covariate
#
data_age <- data_clean %>%
  mutate(age.start = as.numeric(age.start)-mean(as.numeric(age.start)))
refit2 = FALSE
formula <- FC_associative ~ age.start + trial_associative*cort*temp + (1 + trial_associative|lizard_id) + (1|clutch)
species <- c("delicata", "guichenoti")
group <- c("Red", "Blue")
#
models <- list() # Create an empty list to store the models
for(s in species){
    # Subset the data for the species
    data_species <- data_age %>%
    filter(species == s)
  for(g in group){
  # Subset the data for the group
  data_group <- data_species %>%
  filter(group == g)
  # Define model file name
  model_file <- paste0("output/models/model_age_", s, "_", g,".rds")
# Fit the model only if it has not been fit yet (if refit2 = TRUE)
  if(refit2 == TRUE){
    # Fit the model
    model <- brm(formula,
                data = data_group,
                family = bernoulli(link = "logit"),
                chains = 4, cores = 4, iter = 3000, warmup = 1000, control = list(adapt_delta = 0.99))
    # Write the model to a file
    saveRDS(model, file = model_file)
  } else {
      # Read the model from a file
      model <- readRDS(file = model_file)
  }
  # Save the model to the list
  models[[paste0(s, "_", g)]] <- model
  }
}
#
model_age_deli_red <- models[["delicata_Red"]]
model_age_deli_blue <- models[["delicata_Blue"]]
model_age_guich_red <- models[["guichenoti_Red"]]
model_age_guich_blue <- models[["guichenoti_Blue"]]
```

Table 3. Results for _L. delicata_ assigned to red ramps when the model included the age:
```{r, tbl-agedeli_red, results='asis', out.widht = "26cm"}
#| label: tbl-agedeli_red
#| tbl-cap: "Summary model_age_deli_red"
deli_age_red <- summary(model_age_deli_red)
# Extract fixed effects names and their corresponding estimates, CIs, etc.
fixed_effects <- deli_age_red$fixed %>%
  mutate_all(~ format_dec(., 2))
Predictors <- rownames(fixed_effects)
deli_age_red_tbl_df <- cbind(Predictors, fixed_effects)
# Convert the fixed effects data frame to a flextable
flextable(deli_age_red_tbl_df) %>%
  set_table_properties(., width = 1) %>%
  fontsize(size = 10, part = "all")
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

Table 4. Results for _L. delicata_ assigned to blue ramps when the model included the age:
```{r, tbl-agedeli_blue, results='asis', out.widht = "26cm"}
#| label: tbl-agedeli_blue
#| tbl-cap: "Summary model_age_deli_blue"
deli_age_blue <- summary(model_age_deli_blue)
# Extract fixed effects names and their corresponding estimates, CIs, etc.
fixed_effects <- deli_age_blue$fixed %>%
  mutate_all(~ format_dec(., 2))
Predictors <- rownames(fixed_effects)
deli_age_blue_tbl_df <- cbind(Predictors, fixed_effects)
# Convert the fixed effects data frame to a flextable
flextable(deli_age_blue_tbl_df) %>%
  set_table_properties(., width = 1) %>%
  fontsize(size = 10, part = "all")
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

Table 5. Results for _L. guichenoti_ assigned to red ramps when the model included the age:
```{r, tbl-ageguich_red, results='asis', out.widht = "26cm"}
#| label: tbl-ageguich_red
#| tbl-cap: "Summary model_age_guich_red"
guich_age_red <- summary(model_age_guich_red)
# Extract fixed effects names and their corresponding estimates, CIs, etc.
fixed_effects <- guich_age_red$fixed %>%
  mutate_all(~ format_dec(., 2))
Predictors <- rownames(fixed_effects)
guich_age_red_tbl_df <- cbind(Predictors, fixed_effects)
# Convert the fixed effects data frame to a flextable
flextable(guich_age_red_tbl_df) %>%
  set_table_properties(., width = 1) %>%
  fontsize(size = 10, part = "all")
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

Table 6. Results for _L. guichenoti_ assigned to blue ramps when the model included the age:
```{r, tbl-ageguich_blue, results='asis', out.widht = "26cm"}
#| label: tbl-ageguich_blue
#| tbl-cap: "Summary model_age_guich_blue"
guich_age_blue <- summary(model_age_guich_blue)
# Extract fixed effects names and their corresponding estimates, CIs, etc.
fixed_effects <- guich_age_blue$fixed %>%
  mutate_all(~ format_dec(., 2))
Predictors <- rownames(fixed_effects)
guich_age_blue_tbl_df <- cbind(Predictors, fixed_effects)
# Convert the fixed effects data frame to a flextable
flextable(guich_age_blue_tbl_df) %>%
  set_table_properties(., width = 1) %>%
  fontsize(size = 10, part = "all")
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

```{r, fig-age} 
#| label: fig-age
#| fig.cap: "Distribution of the age of the lizards by treatment and species"
# Plotting the distribution of the age of the lizards by treatment and species
# Load the data
data_age <- data_clean
# Plot the distribution of the age of the lizards by treatment and species
img_deli <- readPNG("./Others/Deli.png")
plot_age_deli <- data_age %>%
  filter(species == "delicata") %>%
  mutate(trt = factor(trt, 
          levels = c("A_23", "B_23", "A_28", "B_28"), 
          labels = c("Control-Cold", "CORT-Cold", "Control-Hot", "CORT-Hot"))) %>%
  ggplot(aes(x = age.start, color = trt)) +
  geom_density(linewidth = 1.5) +
  scale_color_manual(values = c("CORT-Cold"="darkblue", "Control-Cold"="#68bde1", "CORT-Hot"="#b50101", "Control-Hot"="#fa927d")) +  
  labs(title = "L. delicata", x = "Age (days)", color = "Treatments") +
  theme_classic() +
  theme(plot.margin = margin(5.5, 5.5, 5.5, 5.5, "mm"),
    plot.title = element_text(size = 14, family = "Times", face = "italic"),
    axis.text.y = element_blank(),   # Remove y-axis labels
    axis.title = element_text(size = 12, family = "Times"),
    axis.text = element_text(size = 10, family = "Times"),
    legend.position = "right",
    legend.title = element_text(size = 12, family = "Times"),
    legend.text = element_text(size = 11, family = "Times")
    ) +
  annotation_custom(rasterGrob(img_deli), xmin = 0.73, xmax = 0.98, ymin = 0.73, ymax = 0.98)
#
img_guich <- readPNG("./Others/Guich.png")
plot_age_guich <- data_age %>%
  filter(species == "guichenoti") %>%
  mutate(trt = factor(trt, 
          levels = c("A_23", "B_23", "A_28", "B_28"), 
          labels = c("Control-Cold", "CORT-Cold", "Control-Hot", "CORT-Hot"))) %>%
  ggplot(aes(x = age.start, color = trt)) +
  geom_density(linewidth = 1.5) +
  scale_color_manual(values = c("CORT-Cold"="darkblue", "Control-Cold"="#68bde1", "CORT-Hot"="#b50101", "Control-Hot"="#fa927d")) +  
  labs(title = "L. guichenoti", x = "Age (days)", color = "Treatments") +
  theme_classic() +
  theme(plot.margin = margin(5.5, 5.5, 5.5, 5.5, "mm"),
    plot.title = element_text(size = 14, family = "Times", face = "italic"),
    axis.text.y = element_blank(),   # Remove y-axis labels
    axis.title = element_text(size = 12, family = "Times"),
    axis.text = element_text(size = 10, family = "Times"),
    legend.position = "right",
    legend.title = element_text(size = 12, family = "Times"),
    legend.text = element_text(size = 11, family = "Times")
    ) +
  annotation_custom(rasterGrob(img_guich), xmin = 0.73, xmax = 0.98, ymin = 0.73, ymax = 0.98)
#
plot_age <- plot_grid(plot_age_deli, plot_age_guich, ncol = 1)
ggsave("./output/figures/plot_age.png", plot=plot_age, width = 25, height = 18, units = "cm", dpi = 600)
knitr::include_graphics("./output/figures/plot_age.png")
```