---
docx: 
bibliography: "./bib/refs.bib"
csl: "./bib/animal-cognition.csl"
reference-doc: "./bib/tmpl.docx"
execute:
  echo: false
  error: false
  cache: false
  warning: false
link-citations: true
crossref:  
  fig-title: Fig    # (default is "Figure")
  title-delim: —     # (default is ":")
  fig-prefix: Fig.   # (default is "Figure")
  tbl-prefix: Table  # (default is "Table")
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
pacman::p_load(tidyverse, flextable, emmeans, DHARMa, brms, here, ggplot2, lme4, zoo, lmerTest, broom, tidybayes, ggh4x, PupillometryR, cowplot, png, grid)
```

## Introduction

Cognition is defined as the processes by which animals gather, preserve, and use information from their environment through perception, learning, memory, and decision making [@shettleworth]. These cognitive processes underpin animal foraging, mate choice, antipredatory strategies and social behaviours that are crucial for the survival and reproduction [@dukas_evolutionary_2004]. Learning - the acquisition of new information [@dukas_evolutionary_2004] - is fundamental for coping with environmental changes by enabling individuals to create new associations between events [@dukas_evolutionary_2004; @leal_behavioural_2012; @buchanan_condition_2013]. However, in nature, there is individual variation in the capacity to acquire new information, depending on factors like age, sex, gut microbiota, or the environment where organisms develop [@szuran_water_1994; @lemaire_prenatal_2000; @zhu_prenatal_2004; @amiel_hotter_2012; @amiel_egg_2014; @carazo_sex_2014; @noble_age-dependent_2014; @alemohammad_2022_microbiota_learning]. The latter can be particularly relevant since the brain is especially susceptible to environmental conditions during early stages of development [@zhu_prenatal_2004]. Therefore, investigating the effects of the developmental environment on learning can be essential to understand how individual variation in learning is shaped, and, in consequence, to predict animals' responses towards environmental change.  

In this sense, prenatal glucocorticoids (GCs) - hormones related to organisms' response to stress [@sapolsky_how_2000] - and prenatal thermal environment are known to influence learning abilities in different taxa [see @lemaire_prenatal_2000; @zhu_prenatal_2004; @amiel_hotter_2012; @amiel_egg_2014; @crino_corticosterone_2014; @abayarathna_effects_2020]. For instance, some studies have demonstrated that prenatal stress and high prenatal GC levels impair learning [@lemaire_prenatal_2000; @zhu_prenatal_2004; @farrell_developmental_2015-learn], while others showed diverse effects depending on factors like sex or the nature of the learning task [@szuran_water_1994; @crino_corticosterone_2014-learn; @farrell_developmental_2015-learn; @bebus_associative_2016]. Similarly, some experiments have shown significant impacts of prenatal temperature on learning in ectotherms [@amiel_hotter_2012; @amiel_egg_2014; @dayananda_incubation_2017; @abayarathna_effects_2020]. In fact, high incubation temperatures have been linked with faster learning rates in skinks [@amiel_hotter_2012; @amiel_egg_2014; @clark_colour_2014], while velvet geckos incubated at temperatures over their natural range learn slower than those incubated within the natural thermal limits [@dayananda_incubation_2017; @abayarathna_effects_2020]. In this vein, the effects of prenatal temperature and GCs are linked to similar alterations in neural structure and metabolic activity [@coomber_independent_1997; @lemaire_prenatal_2000; @sakata_neural_2000; @zhu_prenatal_2004; @du_dynamic_2009; @amiel_effects_2017; @beltran_are_2021], which suggests that bot factors may interact to shape learning [@noble_developmental_2018]. Furthermore, GCs can play an pivotal role in determining vertebrate responses to elevated temperatures [@Crino_2023] potentially fostering natural interactions between temperature and GCs. However, our understanding of how these two factors interact remains incomplete.  

In this study, we aim to explore the interactive effects between prenatal GCs and the prenatal thermal environment on learning. We utilized two species of skinks, the delicate skink (_Lampropholis delicata_) and the common garden skink (_L. guichenoti_), as model species. We experimentally increased corticosterone (CORT) - the main GC in birds, reptiles, amphibians, and rodents [@Crino_2023] - levels in the eggs of these two species of skinks and then incubated them at two different temperatures in a 2X2 factorial design. Post-incubation, the juveniles were subjectd to a colour-associative task to assess their learning abilities. Our hypothesis posits that changes in CORT levels and temperature during early development will induce sustained effects on brain's physiology that will ultimately impact learning skills. We predict that individuals exposed to high levels of CORT and/or low temperatures will perform less proficiently compared to control individuals or those exposed to high temperatures. Additionally, we anticipate that incubation at high temperatures will mitigate the impact of CORT on skink performance, while cold incubation temperatures are expected to enhance the detrimental effects of CORT on learning. This may occur for two reasons that are not mutually exclusive: first, an increase in temperature leads to an overall rise in neural density [@amiel_effects_2017], thereby counteracting the impact of CORT [see @lemaire_prenatal_2000; @zhu_prenatal_2004]; and second, the elevated metabolic rate associated with higher temperatures accelerates the metabolism of CORT, resulting in embryos being exposed to CORT for a shorter time. Finally, we expect that the effects of the treatments will be similar in both species, as both species share similar life history traits and are closely related [@chapple_know_2011; @chapple_biology_2014], and other cognitive studies have not found any difference between species when tested in an associative learning task [@bezzina2014does].  

## Methods  

#### Subjects  
_L. guichenoti_ and _L. delicata_ are small (∼35--55 mm snout-vent length (SVL)), oviparous, and generalist skinks that usually share the same habitat in suburban areas throughout south-eastern Australia [@chapple_know_2011]. Both species have similar breeding periods, but with some differences in reproductive output: while *L. delicata* lays 1 to 6 eggs in only one clutch per season, *L. guichenoti* clutches are smaller (1-5 eggs per clutch) but they usually lay two clutches per season [@chapple_know_2011; @chapple_biology_2014]. Also, some sudies have found some behavioural divergence between the two skinks [@chapple_know_2011]. _L. delicata_ is more exploratory and bolder than _L. guichenoti_ [@chapple_know_2011] which was related to the former's success as an invassive species [@chapple_know_2011; @bezzina2014does], but not with their ability to learn in an associatve learning task [@bezzina2014does].   

#### Husbandry  
*Breeding colony* -- We tested juveniles coming from a breeding colony established in the lab since 2019. There is a total of 270 and 180 adults of *L. delicata* and *L. guichenoti* respectively, housed in big containers (41.5 L x 30.5 W x 21 H cm) with six lizards (2 males and 4 females) per enclosure. Enclosures are provided with non-stick matting, shelter, and several small water dishes. Water is given daily, and they are fed approx. 40 mid-size crickets (*Acheta domestica*) per enclosure three days a week. Crickets are dusted with calcium weekly and multivitamin and calcium biweekly. To ensure a temperature gradient, we employ a heat chord and a heat lamp following a 12 h light:12 h dark cycle. Room temperatures are set to 22-24 Celsius, and warm side of enclosures is usually at 32 Celsius.  
*Eggs collection and incubation* -- Between mid-October 2022 to the end of February 2023, we provided females with a place to lay the eggs by means of small boxes (12.5 L x 8.3 W x 5 H cm) with moist vermiculite inside, that were placed in one extreme of the communal enclosures (see above). We checked for the presence of eggs in the boxes three days a week. After collection, we measured length and width of eggs with a digital caliper to the nearest 0.1 mm and weight them with a (OHAUS, Model spx123) digital scale ± 0.001g error. Then eggs were treated with CORT or vehicle (see CORT and Temperature manipulation below) and were placed in individual cups (80 mL) with moist vermiculite (12 parts water to 4 parts vermiculite). The cups were covered with cling wrap to retain moisture and left in LATWIT 2X5D-R1160 incubators at two different temperatures (see CORT and Temperature manipulation below) until hatching.  
*Hatchlings* -- Eggs in the incubator were checked three times a week for hatchlings. After hatchling, we measured juveniles' SVL and Tail Length (TL) with a rule to the nearest mm and weighted them with a (OHAUS, Model spx123) digital scale ± 0.001g error. We then placed hatchlings in individual enclosures (18.7L x 13.2W x 6.3H cm) and provided them with non-stick matting and a small water dish. During this period, they were sprayed water every day and received 3-6 small *A. domestica* crickets three times a week. All care otherwise follows similar protocols to adults (see above).  
Two weeks before we started the training phase (see below), lizards were moved to the experimental arena for acclimatation. The arenas were individual medium size (41 L x 29.7 W x 22 H cm) plastic containers with a shelter (9 L x 6 W x 1.5 H cm) on one of the extremes and a water dish on the other. These new enclosures were placed in two rooms in 7 different racks associated to 7 different CCTV systems (device model DVR-HP210475) that allowed us to record their behaviour during the experiment (see details below). The number of lizards per species and treatment in each rack was counterbalanced to control for any effect of the room or the position of the lizard in the rack. During acclimatation and all the experiment, lizards were fed with only one cricket per day dusted with calcium and multivitamin (see protocol below), and water was supplied *ad libitum*. We provided a temperature gradient by means of a heat cord and heat lamps in a 12 h light: 12 h dark cycle. The rooms temperature was set to between 22-24 Celsius.  

#### CORT and Temperature manipulation  
To test empirically the effect of early environment we manipulated CORT concentration in eggs and incubated them under one of two temperature regimes ('Cold' -- 23ºC ± 3ºC or 'Hot' -- 30ºC ± 3ºC) in a 2x2 factorial design (@fig-Methods A). We first allocated eggs to one of two different treatments: CORT treatment, where eggs were topically supplied with 5µL of CORT dissolved in 70% Ethanol and 30% DMSO (vehicle) at a final (10 pg CORT/mL) concentration (CORT treatment); and a Control treatment, where eggs received an equal volume of the vehicle. CORT concentration employed in the CORT treatment represents 2 standard deviations above the mean natural concentration obtained in eggs from both species (non-published data). Then, eggs were incubated in one of the two previously mentioned temperature regimes ('Cold' or 'Hot') until hatching. The number of eggs per clutch assigned to each hormone and temperature treatment were counterbalanced in both species.  

#### Learning  
To estimate learning skills, we tested skinks' ability to locate a food reward in a series of behavioural tasks (@fig-Methods B) [see @leal_behavioural_2012; @clark_colour_2014]. First, we performed a training phase where lizards had to learn to eat from white 3D-printed PLA ramps (9 L x 4 W x 5 H cm) identical to the ones from the experiment except for the colour (see below). We divided this training phase into three stages: in the first stage, lizards had to eat a small, frozen cricket (*A. domestica*) from an opaque petri dish (3D x 1.6H cm) placed in the middle of their enclosure (@fig-Methods B, Stage 1); in the second stage, the petri dish with the cricket was placed on top of the white 3D printed ramps (@fig-Methods B, Stage 2); and finally, the cricket was left inside a well (3D x 1.75H cm) on the top of the ramp in the third and last stage (Fig. @fig-Methods B, Stage 3). Every trial began when we left the feeding block (petri dish, ramp, or both) inside the enclosure and finished one hour later when we took it away. At the end of each trial, we recorded whether the cricket had been consumed or not. Trial was considered successful if the lizard could locate and consume the reward, while completion of each stage required the lizards to eat the crickets in at least 5 out of 6 trials. This phase lasted 38 days until all the lizards were able to eat from the ramp; only in one case we decided not to use the lizard because its behaviour was not consistent over the course of the training phase.  
For the learning phase, we trained lizards to associate between colour and a food reward ('Associative task' in Fig. @fig-Methods B). The test was like the third stage of the training phase, but here lizards were presented with three feeders that differed in the colour. We placed the food reward (small, frozen, *A. domestica* crickets) inside the wells of the three feeders, covering two of the crickets with 3D-printed lids (3D x 0.5H cm) so prey was only accessible in "the correct" ramp. The food reward was placed in all three wells to avoid lizard using prey chemical cues, and the lids had a series of small holes on the top to allow the release of those chemicals. The colours of the feeders were green, red, and blue, as previous studies demonstrate that squamates can discriminate between these colours [@Baden_Osorio_2019_Vert_vision]. To control for potential colour preference that could bias our results we split the subjects into two groups counterbalanced by treatment and species: in one group the correct choice (i.e., the ramp with the non-covered frozen cricket) was the blue one, while for the other group we assigned red as correct. In all trials, the position of the feeders was changed randomly to ensure subjects were using colour rather than spatial cues for the association. Lizards were tested in this task once a day for 35 days.  
The full experiment was done daily between the 6^th^ of March until the 17^th^ of June 2023, between 11 to 12 am, when the lizards were active. Trials in the learning phase were recorded with CCTV systems always using the same camera per individual. Videos were analysed manually using a standard video player (IINA) by PR, who recorded whether the first choice made by each subject was the correct feeder or not. A choice was considered to be made if the head of the lizard was inside the well of one of the ramps. PR was blinded to the treatments of the lizards during the analyses of the video. We considered a trial failed if there was no choice in one hour of recording and those trials were considered as 'non data' in the analyses. We excluded from our analyses those individuals with more than 15 trials failed (i.e. they did not make a choice), and we considered the first trial to be the first one where the individual made a choice.  

```{r, fig-Methods}
#| label: fig-Methods
#| fig.cap: "Experimental design of early environment manipulation (**A**) and learning tasks (**B**). Stages 1-3 indicate the different phases of the habituation process. In the associative and reversal tasks, white lids show the ramps where the food reward was not attainable."

knitr::include_graphics("./Others/LEARN_FIG_1.png")

```

#### Statistical analyses  
We performed the analyses with species (_L. delicata_ or _L. guichenoti_) separately. We also saw a significant effect of the colour assigned in the preliminary analises, so we decided to split the data by colour (blue or red) as well. As such, we run a total of four different Bayesian multilevel models using the brm function from the brms package (@burkner2017brms) in Quarto (@Allaire_Quarto_2022). Each model consisted of four parallel chains of 3000 iterations, with a warm up interval of 1000 iterations. 'Choice', i.e. whether the feeder visited first was the correct one (1) or not (0) was used as the response variable. The fixed effects of the model included a triple interaction between: 'Trial' as a nummeric variable, and hormone treatmet ('CORT' versus 'Control') and the temperature at which eggs were incubated ('Cold' versus 'Hot') as factors. For the random effects, we employed lizard identity as a random intercept, and as a random slope we included the 'Trial' within each level of lizard identity.  
We used the resulting posterior of these models to evaluate learning differences between treatments within and between species and colour assigned. More specifically, we calculated learning slopes by using the estimates of the trial variable per each level of the hormone-temperature interaction ('Treatments'); values bigger from zero were considered as evidence of learning, while those less or equal to zero not. We used the pmcmc method to test whether those slopes or the comparissons between treatments (e.g. slope for 'CORT-Cold' lizards minus 'CORT-Hot' lizards) were different from zero (two-tailed tests). We considered statistical significance if p-value < 0.05.  

## Results
```{r, cleaning}
#| label: cleaning
source(here("R", "1_data_process.R"))
# Once we run this code, the result will be the main data base used (data_clean).
write.csv(data_clean, file= "./output/databases_clean/data_clean.csv")
```

```{r, sampleSize}
#| label: sampleSize
# List with the sample sizes from the database (here("output/databases_clean/data_clean.csv") as the sample size per species and group is the same on each task. We used function sample (see func.R) to estimate the sample size per treatment and species.
source(here("R", "func.R"))
#
specie <- c("delicata", "guichenoti")
groups <- c("Red", "Blue")
hormone <- c("CORT", "Control")
temperature <- c("Cold", "Hot")
#
n_list <- list()
#
for(i in 1:length(specie)){
  for(j in 1:length(groups)){
    for(k in 1:length(hormone)){
      for(l in 1:length(temperature)){
        n_list[[paste(specie[i], groups[j], hormone[k], temperature[l], sep = "_")]] <- sample(specie[i], groups[j], hormone[k], temperature[l])
      }
    }
  }
}
```

Originally, we started with 96 lizards, 48 per species and 12 per treatment per species. However, due to natural mortality (n = 11), no completion of the training stage (n = 1), or no motivation during the learning tasks (n = 3), we ended up with a total of 81 lizards. Final sample sizes per treatment and species are disclosed on @fig_deli and @fig-guich.  
```{r, models}
#| label: models
# Fitting the model and extraction of posteriors for both species using fit_m function (see func.r in R folder). The result everytime the function is used is a df with the posteriors of the model. The functions saves the model automatically in output/models; and when the parameter refit = FALSE then the posteriors are extracted from the model previously written instead of fitting the model again each time.
source(here("R", "func.R"))
# Model formula: FC_associative ~ Trial*cort*temp + (1 + Trial|lizard_id)
## A.1) L. delicata
deli_red <- fit_m("deli", "red", refit = FALSE)
write.csv(deli_red, file= "./output/Checking/deli_red.csv")
deli_blue <- fit_m("deli", "blue", refit = FALSE)
write.csv(deli_blue, file= "./output/Checking/deli_blue.csv")
## A.2) L. guichenoti
guich_red <- fit_m("guich", "red", refit = FALSE)
write.csv(guich_red, file= "./output/Checking/guich_red.csv")
guich_blue <- fit_m("guich", "blue", refit = FALSE)
write.csv(guich_blue, file= "./output/Checking/guich_blue.csv")
```

```{r, results}
#| label: results
# Rename some of the posteriors and obtain estimates for the "learning rate" for each group and treatment. This "learning rate" consists on the slope of the posterior of the Trial parameter. The slope is the rate at which the probability of choosing the correct feeder increases with each trial. The slope is obtained by adding the posterior of the Trial parameter to the posterior of the interaction between Trial and the treatment (cort and temp). 
## 1) L. delicata
### Group = red
dar_CORTCold <- deli_red$b_Trial #Slope for treatment CORT-Cold for L. delicata, red as the right choice
dar_ControlCold <- (deli_red$'b_Trial:cortControl' + deli_red$b_Trial)
dar_CORTHot <- (deli_red$'b_Trial:tempHot' + deli_red$b_Trial)
dar_ControlHot <- (deli_red$'b_Trial:cortControl:tempHot' + deli_red$b_Trial+ deli_red$'b_Trial:cortControl' + deli_red$'b_Trial:tempHot')
### Group = blue
dab_CORTCold <- deli_blue$b_Trial
dab_ControlCold <- (deli_blue$'b_Trial:cortControl' + deli_blue$b_Trial)
dab_CORTHot <- (deli_blue$'b_Trial:tempHot' + deli_blue$b_Trial)
dab_ControlHot <- (deli_blue$'b_Trial:cortControl:tempHot' + deli_blue$b_Trial + deli_blue$'b_Trial:cortControl' + deli_blue$'b_Trial:tempHot')
## 2) L. guichenoti
### Group = red
gar_CORTCold <- guich_red$b_Trial
gar_ControlCold <- (guich_red$'b_Trial:cortControl' + guich_red$b_Trial)
gar_CORTHot <- (guich_red$'b_Trial:tempHot' + guich_red$b_Trial)
gar_ControlHot <- (guich_red$'b_Trial:cortControl:tempHot' + guich_red$b_Trial + guich_red$'b_Trial:cortControl' + guich_red$'b_Trial:tempHot')
### Group = blue
gab_CORTCold <- guich_blue$b_Trial
gab_ControlCold <- (guich_blue$'b_Trial:cortControl' + guich_blue$b_Trial)
gab_CORTHot <- (guich_blue$'b_Trial:tempHot' + guich_blue$b_Trial)
gab_ControlHot <- (guich_blue$'b_Trial:cortControl:tempHot' + guich_blue$b_Trial + guich_blue$'b_Trial:cortControl' + guich_blue$'b_Trial:tempHot')
```

We found that the estimated learning slopes were lower when the blue feeders were the correct choice compared to slopes of individuals assigned to the group 'Red' for _L. delicata_ ('Blue' mean learning slope = `r format_dec(mean(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot)), 3)`, 95 CI = [`r format_dec(quantile(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot), 0.975), 3)`]; 'Red' mean learning slope = `r format_dec(mean(c(dar_CORTCold, dar_ControlCold, dar_CORTCold, dar_ControlHot)), 3)`, 95% CI = [`r format_dec(quantile(c(dar_CORTCold, dar_ControlCold, dar_CORTCold, dar_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(dar_CORTCold, dar_ControlCold, dar_CORTCold, dar_ControlHot), 0.975), 3)`]; 'Blue' learning slope - 'Red'learning slope = `r format_dec(mean(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot)) - mean(c(dar_CORTCold, dar_ControlCold, dar_CORTCold, dar_ControlHot)), 3)`, p~mcmc `r format_p(pmcmc(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot) - c(dar_CORTCold, dar_ControlCold, dar_CORTCold, dar_ControlHot)), 3)`), but not for _L. guichenoti_ ('Blue' mean learning slope = `r format_dec(mean(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot)), 3)`, 95% CI = [`r format_dec(quantile(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot), 0.975), 3)`]; 'Red' mean learning slope = `r format_dec(mean(c(gar_CORTCold, gar_ControlCold, gar_CORTCold, gar_ControlHot)), 3)`, 95 CI = [`r format_dec(quantile(c(gar_CORTCold, gar_ControlCold, gar_CORTCold, gar_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(gar_CORTCold, gar_ControlCold, gar_CORTCold, gar_ControlHot), 0.975), 3)`]; 'Blue' learning slope - 'Red'learning slope = `r format_dec(mean(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot)) - mean(c(gar_CORTCold, gar_ControlCold, gar_CORTCold, gar_ControlHot)), 3)`, p~mcmc `r format_p(pmcmc(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot) - c(gar_CORTCold, gar_ControlCold, gar_CORTCold, gar_ControlHot)), 3)`). However, further analyses using the first trial indicated a potential bias towards blue in the initial choice (see Supplementary Material and @fig-results) that could be affecting the estimated slopes. As such, we analysed the between treatments differences for each group separately.  

For those _L. delicata_ assigned to group 'Red', we did not find any significant differences between hormones (Control - CORT = `r format_dec(mean(c(dar_ControlCold - dar_ControlHot)) - mean(c(dar_CORTCold, dar_CORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(dar_ControlCold - dar_ControlHot) - c(dar_CORTCold, dar_CORTHot)), 3)`), temperature (Hot - Cold = `r format_dec(mean(c(dar_ControlHot, dar_CORTHot)) - mean(c(dar_ControlCold, dar_CORTCold)), 3)`, p~mcmc~ `format_p(pmcmc(c(dar_ControlHot, dar_CORTHot) - c(dar_ControlCold, dar_CORTCold)), 3)`), or the interaction ([(Control-Hot - CORT-Hot) - (Control-Cold - CORT-Cold)] = `r format_dec(mean(dar_ControlHot - dar_CORTHot) - mean(dar_ControlCold - dar_CORTCold), 3)`, p~mcmc~ `r format_p(pmcmc((dar_ControlHot - dar_CORTHot) - (dar_ControlCold - dar_CORTCold)), 3)`) (**FIG**). Similarly, those assigned to 'Blue' were not afected by CORT (Control - CORT = `r format_dec(mean(c(dab_ControlCold - dab_ControlHot)) - mean(c(dab_CORTCold, dab_CORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(dab_ControlCold - dab_ControlHot) - c(dab_CORTCold, dab_CORTHot)), 3)`), temperature (Hot - Cold = `r format_dec(mean(c(dab_ControlHot, dab_CORTHot)) - mean(c(dab_ControlCold, dab_CORTCold)), 3)`, p~mcmc~ `format_p(pmcmc(c(dab_ControlHot, dab_CORTHot) - c(dab_ControlCold, dab_CORTCold)), 3)`), or the interaction ([(Control-Hot - CORT-Hot) - (Control-Cold - CORT-Cold)] = `r format_dec(mean(dab_ControlHot - dab_CORTHot) - mean(dab_ControlCold - dab_CORTCold), 3)`, p~mcmc~ `r format_p(pmcmc((dab_ControlHot - dab_CORTHot) - (dab_ControlCold - dab_CORTCold)), 3)`) (**FIG**).

```{r, fig-deli}
#| label: fig-deli
#| fig.cap: "Results for Lampropholis delicata for both colour groups "red" (A,B) and "blue" (C, D). Panels A and C show the predicted probability of choosing the correct feeder first over trials. The lines represent the mean predicted probability of choosing the correct feeder first on each trial, and the shaded areas indicate the standard deviation of the mean; both were obtained by using the slope and intercept estimates from the posterior distributions. The different colours indicate the different treatments. Panels B and D show the distribution of the estimates of slopes per each treatment. The x-axis represents the slope estimate, and in the y-axis are the density of the estimates. The different colours indicate the different treatments. Points and bars represent the mean and standard deviation of the mean of the estimates, respectively."
source(here("R", "func.R"))
# First step, create the dfs for all models
## Red
fig_dar_AC_df <- df_plotAC("deli_red")
fig_dar_BD1_df <- df_plotBD1("deli_red")
fig_dar_BD2_df <- df_plotBD2("deli_red")
## Blue
fig_dab_AC_df <- df_plotAC("deli_blue")
fig_dab_BD1_df <- df_plotBD1("deli_blue")
fig_dab_BD2_df <- df_plotBD2("deli_blue")
#
# Second step, create the plots
fig_dar <- plotting(sp = "deli", col = "red", df_prob = fig_dar_AC_df, df_violin = fig_dar_BD1_df, df_points = fig_dar_BD2_df)
fig_dab <- plotting(sp = "deli", col = "blue", df_prob = fig_dab_AC_df, df_violin = fig_dab_BD1_df, df_points = fig_dab_BD2_df)
#
# Third step, merge plots
fig_deli <- plot_grid(fig_dar, fig_dab, ncol = 1) +
  theme(plot.margin = margin(1, 1, 1.5, 1, "cm")) +
  annotate("text", x = 0.5, y = 0.985, label = "Lampropholis delicata", size = 4.5, color = "black", fontface = "italic")
ggsave("./output/figures/fig_deli.png", plot=fig_deli, width = 25, height = 18, units = "cm", dpi = 600)
knitr::include_graphics("./output/figures/fig_deli.png")
```

In _L. guichenoti_, we did not find any significant differences between hormones (Control - CORT = `r format_dec(mean(c(gar_ControlCold - gar_ControlHot)) - mean(c(gar_CORTCold, gar_CORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(gar_ControlCold - gar_ControlHot) - c(gar_CORTCold, gar_CORTHot)), 3)`), temperature (Hot - Cold = `r format_dec(mean(c(gar_ControlHot, gar_CORTHot)) - mean(c(gar_ControlCold, gar_CORTCold)), 3)`, p~mcmc~ `format_p(pmcmc(c(gar_ControlHot, gar_CORTHot) - c(gar_ControlCold, gar_CORTCold)), 3)`), or the interaction ([(Control-Hot - CORT-Hot) - (Control-Cold - CORT-Cold)] = `r format_dec(mean(gar_ControlHot - gar_CORTHot) - mean(gar_ControlCold - gar_CORTCold), 3)`, p~mcmc~ `r format_p(pmcmc((gar_ControlHot - gar_CORTHot) - (gar_ControlCold - gar_CORTCold)), 3)`) for those assigned to the 'Red' group (**FIG**); and we did not find any significant effect of hormone (Control - CORT = `r format_dec(mean(c(gab_ControlCold - gab_ControlHot)) - mean(c(gab_CORTCold, gab_CORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(gab_ControlCold - gab_ControlHot) - c(gab_CORTCold, gab_CORTHot)), 3)`), temperature (Hot - Cold = `r format_dec(mean(c(gab_ControlHot, gab_CORTHot)) - mean(c(gab_ControlCold, gab_CORTCold)), 3)`, p~mcmc~ `format_p(pmcmc(c(gab_ControlHot, gab_CORTHot) - c(gab_ControlCold, gab_CORTCold)), 3)`), or the interaction ([(Control-Hot - CORT-Hot) - (Control-Cold - CORT-Cold)] = `r format_dec(mean(gab_ControlHot - gab_CORTHot) - mean(gab_ControlCold - gab_CORTCold), 3)`, p~mcmc~ `r format_p(pmcmc((gab_ControlHot - gab_CORTHot) - (gab_ControlCold - gab_CORTCold)), 3)`) for those assigned to 'Blue' (**FIG**).  

```{r, fig-guich}
#| label: fig-guich
#| fig.cap: "Results for Lampropholis guichenoti for both colour groups "red" (A,B) and "blue" (C, D). Panels A and C show the predicted probability of choosing the correct feeder first over trials. The lines represent the mean predicted probability of choosing the correct feeder first on each trial, and the shaded areas indicate the standard deviation of the mean; both were obtained by using the slope and intercept estimates from the posterior distributions. The different colours indicate the different treatments. Panels B and D show the distribution of the estimates of slopes per each treatment. The x-axis represents the slope estimate, and in the y-axis are the density of the estimates. The different colours indicate the different treatments. Points and bars represent the mean and standard deviation of the mean of the estimates, respectively."
source(here("R", "func.R"))
# First step, create the dfs for all models
## Red
fig_gar_AC_df <- df_plotAC("guich_red")
fig_gar_BD1_df <- df_plotBD1("guich_red")
fig_gar_BD2_df <- df_plotBD2("guich_red")
## Blue
fig_gab_AC_df <- df_plotAC("guich_blue")
fig_gab_BD1_df <- df_plotBD1("guich_blue")
fig_gab_BD2_df <- df_plotBD2("guich_blue")
#
# Second step, create the plots
fig_gar <- plotting(sp = "guich", col = "red", df_prob = fig_gar_AC_df, df_violin = fig_gar_BD1_df, df_points = fig_gar_BD2_df)
fig_gab <- plotting(sp = "guich", col = "blue", df_prob = fig_gab_AC_df, df_violin = fig_gab_BD1_df, df_points = fig_gab_BD2_df)
#
# Third step, merge plots
fig_guich <- plot_grid(fig_gar, fig_gab, ncol = 1) +
  theme(plot.margin = margin(1, 1, 1.5, 1, "cm")) +
  annotate("text", x = 0.5, y = 0.985, label = "Lampropholis guichenoti", size = 4.5, color = "black", fontface = "italic")
ggsave("./output/figures/fig_guich.png", plot=fig_guich, width = 25, height = 18, units = "cm", dpi = 600)
knitr::include_graphics("./output/figures/fig_guich.png")
```

Finally, we also did not find any significant differences when we compared the estimated slopes between species for 'Red' group(_L. delicata_ mean learning slope = `r format_dec(mean(c(dar_CORTCold, dar_ControlCold, dar_CORTHot, dar_ControlHot)), 3)`, 95% CI = [`r format_dec(quantile(c(dar_CORTCold, dar_ControlCold, dar_CORTHot, dar_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(dar_CORTCold, dar_ControlCold, dar_CORTHot, dar_ControlHot), 0.975), 3)`]; _L. guichenoti_ mean learning slope = `r format_dec(mean(c(gar_CORTCold, gar_ControlCold, gar_CORTHot, gar_ControlHot)), 3)`, 95% CI = [`r format_dec(quantile(c(gar_CORTCold, gar_ControlCold, gar_CORTHot, gar_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(gar_CORTCold, gar_ControlCold, gar_CORTHot, gar_ControlHot), 0.975), 3)`]; _L. delicata_ - _L. guichenoti_ = `r format_dec(mean(c(dar_CORTCold, dar_ControlCold, dar_CORTHot, dar_ControlHot)) - mean(c(gar_CORTCold, gar_ControlCold, gar_CORTHot, gar_ControlHot))), 3)`, p~mcmc~ `r format_p(pmcmc(c(dar_CORTCold, dar_ControlCold, dar_CORTHot, dar_ControlHot) - c(gar_CORTCold, gar_ControlCold, gar_CORTHot, gar_ControlHot)), 3)`) or the 'Blue' one (_L. delicata_ mean learning slope = `r format_dec(mean(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot)), 3)`, 95% CI = [`r format_dec(quantile(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot), 0.975), 3)`]; _L. guichenoti_ mean learning slope = `r format_dec(mean(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot)), 3)`, 95% CI = [`r format_dec(quantile(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot), 0.025), 3)` , `r format_dec(quantile(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot), 0.975), 3)`]; _L. delicata_ - _L. guichenoti_ = `r format_dec(mean(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot)) - mean(c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot))), 3)`, p~mcmc~ `r format_p(pmcmc(c(dab_CORTCold, dab_ControlCold, dab_CORTHot, dab_ControlHot) - c(gab_CORTCold, gab_ControlCold, gab_CORTHot, gab_ControlHot)), 3)`).  


## Discussion

Our results suggest that the early environment manipulation did not affect learning, as we found that the estimated learning slopes were not different between treatments. However, learning slopes were lower when the blue feeders were the correct choice compared to those lizards assigned to the group 'Red' for _L. delicata_, but not for _L. guichenoti_. This difference could be due to a potential bias towards blue in the initial choice, as we found that the estimated probability of choosing the correct feeder in the first trial was higher than expected by chance when the correct feeder was blue (see Supplementary Material). Moreover, those treatments and species whose learning slopes do not differ significantly from zero (see Table 1), are associated to highest bias (see Supplementary Material). Because there was a possibility that the bias towards the blue feeder was something acquired during training, we compared the light spectrum and the perceived chromatic differences between the ramps used in the associative task and the white ones used during habituation, but we did no see any relevant similarity between the white and blue ramps (see Supplementary Material). As such, we consider this bias to not be a derivate from our experimental design. In this regard, the species confidence hypothesis posits that animals should bias their attention towards colours they are familiar with, and empirical studies show that, for instance, dark and light blue T-shirts were associated with lower flight initiation distances and higher capture rates in Western fence lizards where blue is used in intraspecific communication [@putman2017fear]. However, to the best of our knowledge, noone has reported a colour bias in _L. delicata_ or _L. guichenoti_ before; and it is not considered to be involved in intraspecific communication [@torr1996patterns, @chapple_biology_2014]. Still, we recommend to select carefully the colours employed in associative tasks with these species, especially _L. delicata_, for future cognitive tasks employing visual stimuli. Nevertheless, when lizards assigned to blue or red were analysed separately, the between treatments comparissons remain the same in both species. Furthermore, the non-significant trends we observed were not consistent between species or colour assigned. As such, we conclude that, overall, lizards learned at the same rate regardless of the early environment manipulation.  

As part of our predictions, we expected prenatal CORT to impair learning, as other studies have shown [@lemaire_prenatal_2000; @zhu_prenatal_2004; @farrell_developmental_2015-learn; @bebus_associative_2016]. However, in other experiments early-life increases in GCs or induced stress did not affect learning abilities or even improve them [@szuran_water_1994; @crino_corticosterone_2014-learn; @farrell_developmental_2015-learn; @bebus_associative_2016]. In this vein, GCs are known to have hermetic effects, with low levels of GCs being beneficial for learning and memory, and high levels being detrimental [@du_dynamic_2009; @mcewen_brain_2012]. When we measured other traits of lizards coming from the same treatments, we found that the levels of CORT we used affected size and mitochondrial activity in other organs (non-published data), so the CORT dose was enough to affect some aspects of _L. delicata_ and _L. guichenoti_ biology. **However,**  In adition, testing only one cognitive domain could have masked potential differences in learning abilities between treatments. For instance, European starlings males stressed during early stages of development performed worse in a visual associative learning task, but show no differences with control birds when the stimuli tested was acoustic [@farrell_developmental_2015-learn]; while Scrub-jays that had lower CORT levels as nestlings performed better on an associative learning test as adults, but not on a reversal learning task [@bebus_associative_2016]. GCs action involve genomic and nongenomic mechanisms that implicate different types of receptors that can be distributed unevenly in the various regions of the brain [@mcewen_brain_2012], and may be related to the learning performance in distinct tasks. As such, we consider that studying different cognitive domains could provide a more comprehensive understanding of the effects of early-life stress on learning abilities in these species.  

Regarding incubation temperature, we predicted hot-incubated lizards to perform better in our task then those incubated at 23ºC, since most of the studies show enhanced learning abilities with higher incubation temperatures [@amiel_hotter_2012; @amiel_egg_2014; @clark_colour_2014]. Furthermore, those studies that found the opposite pattern, were only when the hot treatment was above the natural thermal range of the species [@dayananda_incubation_2017; @abayarathna_effects_2020]. However, our results do not align with these previous experiments and our predictions. In contrast, we did not find any effect of temperature in _L. delicata_ or _L. guichenoti_. In general, the incubation temperature effects observed on learning performance are associated with higher neural density in certain areas [@amiel_effects_2017], but these effects can be region-dependent [@coomber_independent_1997; @sakata_neural_2000; @amiel_effects_2017]. Hence, as ocurred with CORT, further studies using different cognitive domains should be used to understand the effects of incubation temperature on learning abilities in these species.  
Finally, we did not see any significant difference in learning rates when both species were compared. This result is in line with previous studies that found no differences in learning abilities between _L. delicata_ and _L. guichenoti_ [@bezzina2014does]. However, in the experiment conducted by @bezzina2014does the authors did not find any evidence of learning in neither _L. delicata_ or _L. guichenoti_. In this regard, both learning tasks were conducted in a similar way and using the same cognitive domain, so the differences in the results could be due to the different experimental designs or the complexity of stimuli discrimination. Nevertheless, to test cognitive difference between these two species, further studies should be conducted using different cognitive domains.    
In conclusion, we found that neither prenatal CORT, temperature, or their interaction affected learning abilities when _L. delicata_ and _L. guichenoti_ were subjected to a colour-associative task. However, we believe studying different cognitive domains is necessary to understand the effects of early-life stress and incubation temperature on learning abilities in these species. In addition, we found a bias towards blue that could affect the results found in cognitive tests, and we therefore recommend to select carefully the colours employed when employing visual stimuli in these two species, particularly _L. delicata_.  

## References
<div id="refs"></div>

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

# Suplementary Material

#### Colour preference
To test if lizards were biased towards the assigned colour as our preliminary analyses suggested, we employed the intercepts  from our posterior distributions. We first estimated the predicted probability of choosing the correct feeder first in the first trial, by using the formula: 
$$\text{Probability} = \frac{e^{Intercept}}{1 + e^{Intercept}}$$

Second, we tested the hypothesis that the estimated probability was higher than 0.33 (the probability expected by chance of choosing the correct feeder) using pmcmc. If the estimated probability is above 0.33. we consider it as an indication that there was a preference towards that colour that could be affecting learning slopes. The results per treatment are summarized in @tbl-bias. 
```{r, tbl-bias}
#| label: tbl-bias
#| tbl-cap: "Probability of choosing the correct feeder in the first trial when the correct feeder was blue (Prob Blue) or red (Prob Red) for each species and each treatment. p-values were obtained using pmcmc and test the hypothesis that the probability is >0.33. In bold, those values that are significant (p-value <0.05)"
source(here("R", "func.R"))
# First we estimate the probability of choosing right in the first trial using the intercepts from the posteriors
## 1) L. delicata
### Group = red
probright_drCORTCold <- exp(deli_red$b_Intercept)/(1+exp(deli_red$b_Intercept))
probright_drControlCold <- exp(deli_red$b_cortControl + deli_red$b_Intercept)/(1+exp(deli_red$b_cortControl + deli_red$b_Intercept))
probright_drCORTHot <- exp(deli_red$b_tempHot + deli_red$b_Intercept)/(1+exp(deli_red$b_tempHot + deli_red$b_Intercept))
probright_drControlHot <- exp(deli_red$'b_cortControl:tempHot' + deli_red$b_cortControl + deli_red$b_tempHot + deli_red$b_Intercept)/(1+exp(deli_red$'b_cortControl:tempHot' + deli_red$b_cortControl + deli_red$b_tempHot + deli_red$b_Intercept))
### Group = blue
probright_dbCORTCold <- exp(deli_blue$b_Intercept)/(1+exp(deli_blue$b_Intercept))
probright_dbControlCold <- exp(deli_blue$b_cortControl + deli_blue$b_Intercept)/(1+exp(deli_blue$b_cortControl + deli_blue$b_Intercept))
probright_dbCORTHot <- exp(deli_blue$b_tempHot + deli_blue$b_Intercept)/(1+exp(deli_blue$b_tempHot + deli_blue$b_Intercept))
probright_dbControlHot <- exp(deli_blue$'b_cortControl:tempHot' + deli_blue$b_cortControl + deli_blue$b_tempHot + deli_blue$b_Intercept)/(1+exp(deli_blue$'b_cortControl:tempHot' + deli_blue$b_cortControl + deli_blue$b_tempHot + deli_blue$b_Intercept))
## 2) L. guichenoti
### Group = red
probright_grCORTCold <- exp(guich_red$b_Intercept)/(1+exp(guich_red$b_Intercept))
probright_grControlCold <- exp(guich_red$b_cortControl + guich_red$b_Intercept)/(1+exp(guich_red$b_cortControl + guich_red$b_Intercept))
probright_grCORTHot <- exp(guich_red$b_tempHot + guich_red$b_Intercept)/(1+exp(guich_red$b_tempHot + guich_red$b_Intercept))
probright_grControlHot <- exp(guich_red$'b_cortControl:tempHot' + guich_red$b_cortControl + guich_red$b_tempHot + guich_red$b_Intercept)/(1+exp(guich_red$'b_cortControl:tempHot' + guich_red$b_cortControl + guich_red$b_tempHot + guich_red$b_Intercept))
### Group = blue
probright_gbCORTCold <- exp(guich_blue$b_Intercept)/(1+exp(guich_blue$b_Intercept))
probright_gbControlCold <- exp(guich_blue$b_cortControl + guich_blue$b_Intercept)/(1+exp(guich_blue$b_cortControl + guich_blue$b_Intercept))
probright_gbCORTHot <- exp(guich_blue$b_tempHot + guich_blue$b_Intercept)/(1+exp(guich_blue$b_tempHot + guich_blue$b_Intercept))
probright_gbControlHot <- exp(guich_blue$'b_cortControl:tempHot' + guich_blue$b_cortControl + guich_blue$b_tempHot + guich_blue$b_Intercept)/(1+exp(guich_blue$'b_cortControl:tempHot' + guich_blue$b_cortControl + guich_blue$b_tempHot + guich_blue$b_Intercept))
#
# Second we build a df with all the mean probabilities of choosing right in the first trial for each treatment and species
prob_df <- data.frame(
  probright_drCORTCold_t = format_dec(mean(probright_drCORTCold), 3),
  probright_drControlCold_t = format_dec(mean(probright_drControlCold), 3),
  probright_drCORTHot_t = format_dec(mean(probright_drCORTHot), 3),
  probright_drControlHot_t = format_dec(mean(probright_drControlHot), 3),
  probright_dbCORTCold_t = format_dec(mean(probright_dbCORTCold), 3),
  probright_dbControlCold_t = format_dec(mean(probright_dbControlCold), 3),
  probright_dbCORTHot_t = format_dec(mean(probright_dbCORTHot), 3),
  probright_dbControlHot_t = format_dec(mean(probright_dbControlHot), 3),
  probright_grCORTCold_t = format_dec(mean(probright_grCORTCold), 3),
  probright_grControlCold_t = format_dec(mean(probright_grControlCold), 3),
  probright_grCORTHot_t = format_dec(mean(probright_grCORTHot), 3),
  probright_grControlHot_t = format_dec(mean(probright_grControlHot), 3),
  probright_gbCORTCold_t = format_dec(mean(probright_gbCORTCold), 3),
  probright_gbControlCold_t = format_dec(mean(probright_gbControlCold), 3),
  probright_gbCORTHot_t = format_dec(mean(probright_gbCORTHot), 3),
  probright_gbControlHot_t = format_dec(mean(probright_gbControlHot), 3)) %>%
gather(key = "column", value = "value", .) %>%
rename("prob_choice" = "value") %>%
data.frame()
write.csv(prob_df, file= "./output/Checking/prob_df.csv")
# Then we build a df with the statistical test (one-tailed pmcmc) that the probability is >0.33 (the probability of choosing right by chance)
comp_pval <- data.frame(
  probright_drCORTCold_t = format_p(pmcmc(probright_drCORTCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_drControlCold_t = format_p(pmcmc(probright_drControlCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_drCORTHot_t = format_p(pmcmc(probright_drCORTHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_drControlHot_t = format_p(pmcmc(probright_drControlHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_dbCORTCold_t = format_p(pmcmc(probright_dbCORTCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_dbControlCold_t = format_p(pmcmc(probright_dbControlCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_dbCORTHot_t = format_p(pmcmc(probright_dbCORTHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_dbControlHot_t = format_p(pmcmc(probright_dbControlHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_grCORTCold_t = format_p(pmcmc(probright_grCORTCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_grControlCold_t = format_p(pmcmc(probright_grControlCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_grCORTHot_t = format_p(pmcmc(probright_grCORTHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_grControlHot_t = format_p(pmcmc(probright_grControlHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_gbCORTCold_t = format_p(pmcmc(probright_gbCORTCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_gbControlCold_t = format_p(pmcmc(probright_gbControlCold, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_gbCORTHot_t = format_p(pmcmc(probright_gbCORTHot, null = 0.33, twotail = FALSE, dir=">"), 3),
  probright_gbControlHot_t = format_p(pmcmc(probright_gbControlHot, null = 0.33, twotail = FALSE, dir=">"), 3)) %>%
gather(key = "column", value = "value", .) %>%
rename("p_value" = "value") %>%
data.frame()
write.csv(comp_pval, file= "./output/Checking/comp_pval.csv")
# Now we merge them and organise them to have the final dt for the table
table_df <- merge(prob_df, comp_pval, by ="column") %>%
  mutate(Specie = gsub(".*_(d|g).*", "\\1",column)) %>%
  mutate(Group = gsub(".*_(dr|db|gr|gb).*", "\\1",column)) %>%
  mutate(Treatment = gsub(".*(CORTCold|ControlCold|CORTHot|ControlHot).*", "\\1",column)) %>% #Last three commands used to get the species, group and treatment from the column names
  mutate(Treatment = factor(Treatment, 
                    levels = c("CORTCold", "ControlCold", "CORTHot", "ControlHot"),
                    labels = c("CORTCold" = "CORT-Cold", "ControlCold" = "Control-Cold", "CORTHot" = "CORT-Hot", "ControlHot" = "Control-Hot"))) %>%
  mutate(Specie = factor(Specie,
                levels = c("d", "g"),
                labels = c("d" = "L. delicata", "g" = "L. guichenoti"))) %>%
  mutate(Group = recode(Group, "dr" = "Red", "db" = "Blue", "gr" = "Red", "gb" = "Blue")) %>%
  select(-column) %>%
  pivot_wider(names_from = Group, values_from = c(prob_choice, p_value)) %>% #To split the df in Red and Blue
  select(Specie, Treatment, prob_choice_Blue, p_value_Blue, prob_choice_Red, p_value_Red) %>%
  arrange(Specie, Treatment) %>% # To arrange the rows the way I wantdata.frame()
data.frame()
write.csv(table_df, file= "./output/Checking/table_df.csv")
#################
colour_table <- flextable(table_df) %>%
  bold(~ `p_value_Blue` < 0.05, ~ `p_value_Blue` + prob_choice_Blue) %>%
  bold(~ `p_value_Red` < 0.05, ~ `p_value_Red` + prob_choice_Red) %>%
  set_table_properties(width = 1) %>%
  align(align="center", part="all") %>% 
  set_header_labels(prob_choice_Blue = "Prob Blue", 
                    p_value_Blue = "p-value Blue", 
                    prob_choice_Red = "Prob Red", 
                    p_value_Red = "p-value Red") %>%
  italic(j = 1, italic = TRUE, part = "body") %>% # To have names of species in italics
  flextable::compose(i = c(2:4,6:8), j = 1, value = as_paragraph(""), part = "body") %>% # To remove some of the values in the first column
  hline(i = c(4), j = c(1:6), part = "body") %>% # To make some horizontal lines
  vline(j = c(2,4), part = "all") %>% # To make some vertical lines on body
autofit()
colour_table
```

On average, we found that, for both species, the proportion of correct choices in the first trial was significantly above chance when the correct feeder was blue (_L. delicata_: mean Prob choice = `r format_dec(mean(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_dbCORTCold, probright_dbControlCold, probright_dbCORTHot, probright_dbControlHot), null = 0.33, twotail = FALSE, dir=">"), 3)`; _L. guichenoti_: mean Prob choice = `r format_dec(mean(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_gbCORTCold, probright_gbControlCold, probright_gbCORTHot, probright_gbControlHot), null = 0.33, twotail = FALSE, dir=">"), 3)`), but not when it was red (_L. delicata_: mean Prob choice = `r format_dec(mean(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot), null = 0.33, twotail = FALSE, dir=">"), 3)`; _L. guichenoti_: mean Prob choice = `r format_dec(mean(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(probright_drCORTCold, probright_drControlCold, probright_drCORTHot, probright_drControlHot), null = 0.33, twotail = FALSE, dir=">"), 3)`).  

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Light spectrum
To test if the bias towards blue was something acquired during training, we compared the light spectrum of the ramps used in the associative task and the white ones used during habituation. We took three measurements of ten feeders per colour with a spectophotometer, and then analysed the spectrum and the perceived differences in colour using the package pavo. The spetrum of each type of feeder are shown in @fig-spectrum; the perceived chromatic constrasts between feeders are shown in @fig-perceived1 and @fig-perceived2.  
```{r, fig-spectrum}
#| label: fig-spectrum
#| fig.cap: "Light spectrum of the ramps used in the associative task and the white ones used during habituation. The different colours represent the different ramps."
#
# Load required packages
pacman::p_load(pavo,plotrix,plyr,MCMCglmm,Hmisc,DIZutils)
#
# For importing the files, change the extension of the .jaz files to .txt files!  
# Import spec data for pablos feeders - CHNAGE TO WHERE YOUR FILES ARE LOCATED
specs <- getspec("./Others/Feeders", lim = c(300,700), ext = 'txt') %>%
  procspec(specs, opt = "smooth" , span = 0.2, fixneg = "addmin") 
# Plot smoothed raw data as reflectance curve with approximate rgb colours
plot(specs, type = "o", col = spec2rgb(specs))
```

```{r, fig-perceived1}
#| label: fig-perceived1
#| fig.cap: "Perceived chromatic contrasts between feeders."
#
## Processing the data with the lizard visual model 
# Processing using lizard vision model provided for Dan and Martin's Phyrnocephalus mystaceus paper
liz_vis <- sensmodel(c(360, 440, 493, 571)) 
#
# Apply this over the feeder data visual as the visual system, achromatic is the receptor sensitivity, illum is the illuminate (here using an ideal white illuminate preset), bkg is the background against which we are measuring (here using an ideal background with no influence). Other conditions are applied as used in the P mystaceus paper.
# Does produce an error about luminance but this is noted on the original P mystaceus paper code and should be okay
# summary(feeders_lizardview) can be used to check what conditions were applied in the visual model
feeders_lizardview <- vismodel(specs, visual = liz_vis, achromatic = "l", illum = "ideal", bkg = "ideal", vonkries = TRUE,   relative = FALSE, qcatch = "fi")
#                             
# Calculate colour distances between all feeder measurements
coldistance_feeders <- coldist(feeders_lizardview,achro = TRUE, noise = "neural", n = c(1, 1, 3.5, 6),  weber = 0.1)
#
# Name all contrasts e.g white/green to categorise them
annotated_coldistance_feeders <- coldistance_feeders %>%
  separate(patch1, into = c("color1", "number1"), sep = "_") %>%
  separate(patch2, into = c("color2", "number2"), sep = "_") %>%
  mutate(color_comparison = paste0(color1, "/", color2)) %>%
  mutate(color_comparison = paste0(pmin(color1, color2), "/", pmax(color1, color2))) %>% # Remove duplicate categories(e.g white/green is the same as green/white and all are called green/white)
  subset(!(color_comparison %in% c("B/B", "G/G", "R/R", "W/W")))
#
# Plot the colour differences between the feeders: 
# Note - above 1 is expected to be visually different under the selected visual system (here, lizard view)
# dS, or chromatic contrast
dScomparisons <- ggplot(annotated_coldistance_feeders, aes(x = color_comparison, y = dS, fill = color_comparison)) + 
  geom_boxplot() + 
  theme_classic() +
  ylab("Chromatic Contrast (dS)") +
  xlab("Feeder Colours Comparison") +
 scale_fill_manual(values =c("B/G" = 'steelblue',  "B/R" = 'purple', "B/W" = 'lightblue', "G/R" = 'brown', "G/W" = 'lightgreen', "R/W" = 'red')) +
 theme(plot.margin = margin(5.5, 5.5, 5.5, 5.5, "mm")) + 
  theme(
    axis.title = element_text(size = 15, family = "Times New Roman"),
    axis.text = element_text(size = 10, family = "Times New Roman"),
    legend.title = element_text(size = 12, family = "Times New Roman"),
    legend.text = element_text(size = 10, family = "Times New Roman"),
    strip.text = element_text(size = 13, family = "Times New Roman")
  ) 
print(dScomparisons)
```

```{r, fig-perceived2}
#| label: fig-perceived2
#| fig.cap: "Perceived achromatic contrasts between feeders."
#dL, or achromatic contrast
dLcomparisons <- ggplot(annotated_coldistance_feeders, aes(x = color_comparison, y = dL, fill = color_comparison)) + 
  geom_boxplot() + 
  theme_classic() +
  ylab("Achromatic Contrast (dL") +
  xlab("Feeder Colours Comparison") +
 scale_fill_manual(values =c("B/G" = 'steelblue',  "B/R" = 'purple', "B/W" = 'lightblue', "G/R" = 'brown', "G/W" = 'lightgreen', "R/W" = 'red')) +
 theme(plot.margin = margin(5.5, 5.5, 5.5, 5.5, "mm")) + 
  theme(
    axis.title = element_text(size = 15, family = "Times New Roman"),
    axis.text = element_text(size = 10, family = "Times New Roman"),
    legend.title = element_text(size = 12, family = "Times New Roman"),
    legend.text = element_text(size = 10, family = "Times New Roman"),
    strip.text = element_text(size = 13, family = "Times New Roman")
  )
print(dLcomparisons)
```


```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Checking the models plots  
```{r, residuals}
# Chunk for calling all the models and making the residuals
## L. delicata
### Red
mod_dar <- readRDS("./output/models/deli_red.rds")
resid_dar <- residuals(mod_dar)
### Blue
mod_dab <- readRDS("./output/models/deli_blue.rds")
resid_dab <- residuals(mod_dab)
## L. guichenoti
### Red
mod_gar <- readRDS("./output/models/guich_red.rds")
resid_gar <- residuals(mod_gar)
### Blue
mod_gab <- readRDS("./output/models/guich_blue.rds")
resid_gab <- residuals(mod_gab)
```

Model formula for task is:  
Choice  ~ Trial*cort*temp + (1 + Trial|lizard_id)  
Plots for the different models of the associative task:  
1.- _L. delicata_  
  1.a.- Red  
```{r , plotmod_dar, out.width="70%", fig.align="center"}
bayes_R2(mod_dar)
plot(mod_dar)
```
```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

  1.b.- Blue  
```{r , plotmod_dab, out.width="70%", fig.align="center"}
bayes_R2(mod_dab)
plot(mod_dab)
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

2.- _L. guichenoti_  
  2.a.- Red  
```{r , plotmod_gar, out.width="70%", fig.align="center"}
bayes_R2(mod_gar)
plot(mod_gar)
```
```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

  2.b.- Blue  
```{r , plotmod_gab, out.width="70%", fig.align="center"}
bayes_R2(mod_gab)
plot(mod_gab)
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```


