---
title: "Early environmental conditions do not impact behavioural flexibility in an invasive and non-invasive lizard species"
format:
  docx: 
    bibliography: "./bib/refs.bib"
    csl: "./bib/biology-letters.csl"
    reference-doc: "./bib/tmpl.docx"
execute:
  echo: false
  error: false
  cache: false
  warning: false
link-citations: true
crossref:  
  fig-title: Fig    # (default is "Figure")
  title-delim: —     # (default is ":")
  fig-prefix: Fig.   # (default is "Figure")
  tbl-prefix: Table  # (default is "Table")
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
pacman::p_load(tidyverse, flextable, emmeans, DHARMa, brms, here, ggplot2, lme4, zoo, lmerTest, broom, tidybayes, ggh4x, PupillometryR, cowplot, png, grid)
```

Pablo Recio^1^,$\ddagger$ , Dalton C. Leibold^1^, Ondi L. Crino ^1,2^, Kristoffer H. Wild^1,3^, Chris Friesen^4^, Basile Mauclaire^1,5^, Amelia Y. Peardon ^1^, Daniel W.A. Noble^1^

^1^ Division of Ecology and Evolution, Research School of Biology, The Australian National University, Canberra, ACT 2601, Australia  
^2^ Flinder's University, College of Science and Engineering, Bedford Park, SA 5042, Australia  
^3^ Melbourne University, Melbourne, VIC 3000, Australia  
^4^ University of Wollongong, Wollongong, NSW 2500, Australia  
^5^ Université de Lille, Lille 59000, France  
$\ddagger$ Corresponding author: pablo.reciosantiago@anu.edu.au  

## Abstract
Behavioural flexibility is crucial for animals adapting to and colonizing new environments. However, novel environmental conditions experienced during early development can profoundly impact behavioural flexibility making it unclear how invasive populations establish in new locations. Given the advantages associated with behaving flexibly during the invasion process we predict that behavioural flexibility in invasive species should be less susceptible to the impacts of early environmental conditions. Here, we investigated the interactive effects of prenatal corticosterone (CORT) and temperature on behavioural flexibility in two lizard species, _Lampropholis delicata_ and _L. guichenoti_, with distinct histories of invasion. We manipulated prenatal CORT levels and incubation temperature in a 2x2 factorial design, and then assessed behavioural flexibility through a reversal learning task. Contrary to our expectations, we found no significant differences in the reversal learning rate between treatments or species. Behavioural flexibility appears to be robust to prenatal temperature and CORT which may be one reason why _L. delicata_ has been so successful as an invasive species. However, the lack of difference in reversal learning between _L. delicata_ and _L. guichenoti_ suggests that other processes are likely more influential in invasion success than behavioural flexibility itself.  


## Introduction
Behavioural flexibility describes the ability of individuals to adjust behaviour adaptively in response to internal or external changes in the environment [@brown2010behavioral]. It comprises a suite of behaviours, including problem-solving and innovation [@brown2010behavioral], that are predicted to be crucial for invasion success [@wright2010behavioral; @chapple2012can; @szabo2020can]. Species with greater behavioural flexibility are expected to be more likely to survive and establish in new habitats because behaving flexibly enhances their capacity to exploit new resources and face new challenges [@wright2010behavioral; @chapple2012can; @szabo2020can]. For instance, bird species that are successful invaders have a higher frequency of foraging innovations compared to closely related species without a history of invasions [@sol2000behavioural]. According to the 'adaptive flexibility hypothesis', behavioural flexibility is most relevant during introduction, establishment, and the spread of an invasive population [@wright2010behavioral; @chapple2012can; @szabo2020can]. In mammals, birds, reptiles and amphibians, relative brain size has been shown to be a good predictor of behavioural flexibility and invasive success [@sol2000behavioural; @sol2002behavioural; @sol2008brain; @amiel_smart_2011]. However, the brain is also sensitive to environmental changes during the early stages of development [@zhu_prenatal_2004], creating uncertainty about how environmental conditions faced by early invaders might impact behavioural flexibility and thus the probability of invasion success. 

Novel environments faced by invasive populations introduce organisms to a plethora of unfamiliar and potentially stressful situations. Sensory systems detect and transmit environmental signals to instigate adaptive physiological and behavioural adjustments – responses  that are mediated by glucocorticoids (GCs) [@sapolsky_how_2000]. Glucocorticoids can be transmitted to offspring and influence their phenotype and development through transgenerational effects [@Crino_2023]. In addition to novel environments experienced by parents, offspring also experience potentially stressful environmental conditions that can interact with or amplify parental effects. Temperature, in particular, is likely to deviate in invasive populations compared to source populations, having a direct effect on offspring phenotypes with long-lasting consequences [@noble_developmental_2018]. As such, GCs and temperature are predicted to interact to influence the offspring phenotype with particularly potent effects on brain development [@jonson1976effect; @coomber_independent_1997; @zhu_prenatal_2004; @amiel_effects_2017] and cognition [@clark_colour_2014; @lui2017chronic]. While behavioural flexibility is recognised as an important behavioural phenotype for invasion success [@wright2010behavioral; @chapple2012can; @szabo2020can], we know little about how novel environmental stressors, such as GCs or temperature, impact behavioural flexibility. Such knowledge is crucial for understanding the potential for invasive populations to adapt to new environments and the potential for invasion success. 

Here, we studied the effects of prenatal temperature and the glucocorticoid, corticosterone (CORT) (the main GC in reptiles) [@Crino_2023], on behavioural flexibility in two species with distinct histories of invasion success, the delicate skink (_Lampropholis delicata_) and the common garden skink (_L. guichenoti_). _Lampropholis delicata_ has been successful in colonising different areas around the globe [@baker1979rainbow; @chapple2013divergent; @chapple2015deliinvLHI], but the same is not true of _L. guichenoti_ despite the two species having similar life-histories and overlapping distributions [@chapple_know_2011; @chapple_biology_2014]. Personality has been shown to be different between these two species [@chapple_know_2011; @chapple2012can; @bezzina2014does], which could be related to general cognitive differences that are important for invasion success. Additionally, early environments are known to affect suites of morphological and behavioural traits differently in each species [@carrasco2023maternal; @kar2023heritability], but the interactive role of maternal CORT and early temperatures has not yet been explored. Differences in the relative impact of early environments on behavioural flexibility may help explain differing invasion success between the two species. We predict that _L. delicata_, on average, will perform more proficiently in the task compared to _L. guichenoti_. We also anticipate prenatal CORT and temperature to affect the behavioural flexibility of both species, and that _L. guichenoti_ will be more impacted by the prenatal environment than _L. delicata_.

## Methods  

#### Manipulating Early Thermal and CORT Environments  
To manipulate early thermal environment and CORT, we collected eggs of _L. delicata_ and _L. guichenoti_ from a lab breeding colony that was established from a Sydney population in 2019. The Sydney population is thought to be the source population for invasive populations established on Lord Howe Island [@chapple2016origin]. Eggs were topically supplied with 5µL of CORT dissolved in 100% Ethanol (CORT treatment) or the same volume of the vehicle (Control) and were then incubated at different temperatures (Cold – 23ºC ± 3ºC or Hot – 30ºC ± 3ºC) until hatching in a fully factorial design. For full details of breeding colony and husbandry see Supplementary Material.  

#### Quantifying Behavioural Flexibility  
Briefly, the learning test was divided in three main phases: a habituation phase where lizards had to learn to eat a frozen-thawed cricket from white 3D-printed polylactic acid (PLA) ramps (9 L x 4 W x 5 H cm). The habituation phase lasted 38 days. This was followed by a colour association task where lizards had to associate the food reward with one of two colours (red or blue) (@fig-Methods Associative task). The associative learning task lasted 35 days. Finally, to quantify behavioural flexibility, we reversed the previously trained colour (red or blue) so that the lizards needed to learn to associate the food with the opposite colour (@fig-Methods Reversal task). The reversal learning task lasted a total of 40 days. Lizards were tested once daily between 11 am to 12 pm when they were most active.  

In associative and reversal tasks we used three different ramps that were identical in size and shape to the ones used in the habituation phase. The colours of the ramps were green, red, and blue, as previous studies demonstrate that squamates can discriminate between these colours [@Baden_Osorio_2019_Vert_vision]. To avoid the influence of chemical cues, we placed the food reward in all three ramps, but in two of them the cricket was covered by immovable small lids with holes on the top. To control for potential colour biases, we assigned one group of lizards within each treatment to associate food in the blue ramp followed by the red ramp in the reversal, while in the other group the order was reversed. In all trials, the position of the feeders was changed randomly to ensure subjects were using colour rather than spatial cues for the association.  

We recorded whether the animal chose the correct ramp first or not. We considered that a choice was made if the head of the lizard was inside the well of one of the ramps. We considered a trial failed if there was no choice in one hour of recording and those trials were scored as NA. Here, we analysed the data of the reversal task as a measure of behavioural flexibility [@brown2010behavioral].  

```{r, fig-Methods}
#| label: fig-Methods
#| fig.cap: "Experimental design of early environment manipulation and learning tasks. Panel A represents the early environment manipulation for both species. Panel B shows the habituation phase with the respective three different stages. And panel C represents the associative and reversal tasks; white lids show the ramps where the food reward was not accessible."

knitr::include_graphics("./Others/BEHFLEX_FIG_1.png")

```

#### Statistical analyses  
We performed the analyses for each species separately. We fitted two different Bayesian multilevel models using the brm function from the _brms_ package [@burkner2017brms] using an R extension (version 2.8.2) [@R]. We ran four parallel MCMC chains of 3000 iterations for each model, with a warmup period of 1000 iterations. We modelled correct choices [correct (1) or not (0)] as the response variable, and trial, hormone (CORT versus Control), incubation temperature (Cold versus Hot), and their interaction as fixed factors. We included a random intercept and slope (trial) for each lizard in our models. We used the posterior distributions of parameters from these models to test for differences in learning rate between treatments and species. Learning slopes were obtained using the ‘trial’ estimates and its interaction with hormone and temperature treatments. Slope estimates greater than zero were considered as evidence of learning, while those less or equal to zero were not. We calculated the probability that slopes or contrasts between slopes differed from zero (p~mcmc~) using the posterior distributions. We considered statistical significance if p~mcmc~  < 0.05.  
 

## Results

```{r, cleandata}
#| label: cleandata
# Obtain the main df using "./R/1_data_process.R"
source(here("R", "1_data_process.R"))
```

```{r, sampleSize}
#| label: sampleSize
# List with the sample sizes from the database (here("output/databases_clean/data_asso.csv") as the sample size per species and group is the same on each task. We used function sample (see func.R) to estimate the sample size per treatment and species.
source(here("R", "func.R"))
#
specie <- c("delicata", "guichenoti")
hormone <- c("CORT", "Control")
temperature <- c("Cold", "Hot")
#
n_list <- list()
#
for(i in 1:length(specie)){
  for(k in 1:length(hormone)){
    for(l in 1:length(temperature)){
      n_list[[paste(specie[i], hormone[k], temperature[l], sep = "_")]] <- sample(clean_df, specie[i], hormone[k], temperature[l])
      }
    }
  }
```

Originally, we started with 96 lizards, 48 per species and 12 per treatment per species. However, our final sample size was 81 due to natural mortality (n = 11), failure to complete the training stage (n = 1), or if the number of failed tasks (see above) was higher than 15 (n = 3). Final sample sizes per treatment and species are listed in @fig-results.

```{r, models}
#| label: models
# Fitting the model and extraction of posteriors for both types of task and species using fit_m function (see func.r in R folder). The result everytime the function is used is a df with the posteriors of the model. The functions saves the model automatically in output/models; and when the parameter refit = FALSE then the posteriors are extracted from the model previously written instead of fitting the model again each time.
source(here("R", "func.R"))
# Model formula: FC_reversal ~ trial_reversal*cort*temp + (1 + trial_reversal|lizard_id)
## A) L. delicata
deli <- fit_m(clean_df, "deli", "complete",  refit = FALSE)
write.csv(deli, file= "./output/Checking/deli.csv")
## B) L. guichenoti
guich <- fit_m(clean_df, "guich", "complete", refit = FALSE)
write.csv(guich, file= "./output/Checking/guich.csv")
```

```{r, results}
#| label: results
# Rename some of the posteriors and make means and sd for the posteriors.
## 1) L. delicata
deli_CORTCold <- deli$b_trial_reversal
deli_ControlCold <- (deli$'b_trial_reversal:cortControl' + deli$b_trial_reversal)
deli_CORTHot <- (deli$'b_trial_reversal:tempHot' + deli$b_trial_reversal)
deli_ControlHot <- (deli$'b_trial_reversal:cortControl:tempHot' + deli$b_trial_reversal + deli$'b_trial_reversal:cortControl' + deli$'b_trial_reversal:tempHot')
## 2) L. guichenoti
guich_CORTCold <- guich$b_trial_reversal
guich_ControlCold <- (guich$'b_trial_reversal:cortControl' + guich$b_trial_reversal)
guich_CORTHot <- (guich$'b_trial_reversal:tempHot' + guich$b_trial_reversal)
guich_ControlHot <- (guich$'b_trial_reversal:cortControl:tempHot' + guich$b_trial_reversal + guich$'b_trial_reversal:cortControl' + guich$'b_trial_reversal:tempHot')
```

Both species learnt across all treatments (@fig-results B, D), but we did not find any difference between treatments or species in the rate of learning. For _L. delicata_, hormone treatment (Control - CORT = `r format_dec(mean(c(deli_ControlCold, deli_ControlHot)) - mean(c(deli_CORTCold, deli_CORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(deli_ControlCold, deli_ControlHot) - c(deli_CORTCold, deli_CORTHot)), 3)`), incubation temperature (Hot - Cold = `r format_dec(mean(c(deli_CORTHot, deli_ControlHot)) - mean(c(deli_CORTCold, deli_ControlCold)),3)`, p~mcmc~ `r format_p(pmcmc(c(deli_CORTHot, deli_ControlHot) - c(deli_CORTCold, deli_ControlCold)),3)`), or the interaction ([(Control-Hot - CORT-Hot) - (Control-Cold - CORT-Cold)] = `r format_dec((mean(deli_ControlHot) - mean(deli_CORTHot)) - (mean(deli_ControlCold) - mean(deli_CORTCold)), 3)`, p~mcmc~ `r format_p(pmcmc((deli_ControlHot - deli_CORTHot) - (deli_ControlCold - deli_CORTCold)), 3)`) did not affect learning (see @fig-results A, B). We similarly found no significant effects of  hormone (Control - CORT = `r format_dec(mean(c(guich_ControlCold, guich_ControlHot)) - mean(c(guich_CORTCold, guich_CORTHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(guich_ControlCold, guich_ControlHot) - c(guich_CORTCold, guich_CORTHot)), 3)`), incubation temperature (Hot - Cold = `r format_dec(mean(c(guich_CORTHot, guich_ControlHot)) - mean(c(guich_CORTCold, guich_ControlCold)),3)`, p~mcmc~ `r format_p(pmcmc(c(guich_CORTHot, guich_ControlHot) - c(guich_CORTCold, guich_ControlCold)),3)`), or the interaction ([(Control-Hot - CORT-Hot) - (Control-Cold - CORT-Cold)] = `r format_dec((mean(guich_ControlHot) - mean(guich_CORTHot)) - (mean(guich_ControlCold) - mean(guich_CORTCold)), 3)`, p~mcmc~ `r format_p(pmcmc((guich_ControlHot - guich_CORTHot) - (guich_ControlCold - guich_CORTCold)), 3)`) on learning in _L. guichenoti_ (see @fig-results C, D).   

```{r, fig-results}
#| label: fig-results
#| fig.cap: "Results for L. delicata (A,B) and L. guichenoti (C, D). Panels A and C show the predicted probability of choosing the correct feeder first over trials. The lines represent the mean predicted probability of choosing the correct feeder first on each trial, and the shaded areas indicate the standard deviation of the mean; both were obtained by using the slope and intercept estimates from the posterior distributions. The different colours indicate the different treatments. Panels B and D show the distribution of the estimates of slopes per each treatment. The x-axis represents the slope estimate, and in the y-axis are the density of the estimates. The different colours indicate the different treatments. Points and bars represent the mean and standard deviation of the mean of the estimates, respectively."
source(here("R", "func.R"))
# Create the dfs for the probability plot A and C) (df_prob)
# L. delicata
df_deliprob <- df_plotAC("deli")
# L. guichenoti
df_guichprob <- df_plotAC("guich")
#
# Create the df for the violin plots in plot B) (df_violin)
# L. delicata
df_deliV <- df_plotBD1("deli")
# L. guichenoti
df_guichV <- df_plotBD1("guich")
#
# Create the df for the points and bars in plot B) (df_points)
# L. delicata
df_deliP <- df_plotBD2("deli")
# L. guichenoti
df_guichP <- df_plotBD2("guich")
#
#
# Make plots deli and guich
source(here("R", "func.R"))
fig_deli <- plotting(sp = "deli", df_prob = df_deliprob, df_violin = df_deliV, df_points = df_deliP)
fig_guich <- plotting(sp = "guich", df_prob = df_guichprob, df_violin = df_guichV, df_points = df_guichP)
# Combine plots of both species into the final figure
fig_results <- plot_grid(fig_deli, fig_guich, ncol = 1)
ggsave("./output/figures/fig_results.png", plot=fig_results, width = 25, height = 18, units = "cm", dpi = 600)
knitr::include_graphics("./output/figures/fig_results.png")
```

Finally, when all individuals from all the treatments were pooled together and species were compared, there were not significant differences in the estimated slopes (mean of learning slope in _L. delicata_ = `r format_dec(mean(c(deli_CORTCold, deli_ControlCold, deli_CORTHot, deli_ControlHot)), 3)`, 95% CI = [`r format_dec(quantile(c(deli_CORTCold, deli_ControlCold, deli_CORTHot, deli_ControlHot), 0.025), 3)`, `r format_dec(quantile(c(deli_CORTCold, deli_ControlCold, deli_CORTHot, deli_ControlHot), 0.975), 3)`]; mean learning of slope in _L. guichenoti_ = `r format_dec(mean(c(guich_CORTCold, guich_ControlCold, guich_CORTHot, guich_ControlHot)), 3)`, 95% CI = [`r format_dec(quantile(c(guich_CORTCold, guich_ControlCold, guich_CORTHot, guich_ControlHot), 0.025), 3)`, `r format_dec(quantile(c(guich_CORTCold, guich_ControlCold, guich_CORTHot, guich_ControlHot), 0.975), 3)`]; _L. delicata_ - _L. guichenoti_ = `r format_dec(mean(c(deli_CORTCold, deli_ControlCold, deli_CORTHot, deli_ControlHot)) - mean(c(guich_CORTCold, guich_ControlCold, guich_CORTHot, guich_ControlHot)), 3)`, p~mcmc~ `r format_p(pmcmc(c(deli_CORTCold, deli_ControlCold, deli_CORTHot, deli_ControlHot) - c(guich_CORTCold, guich_ControlCold, guich_CORTHot, guich_ControlHot)), 3)`).  


## Discussion

This study aimed to determine the interactive effects of prenatal temperature and GCs on behavioural flexibility in two closely related species, the delicate skink (_Lampropholis delicata_) and the common garden skink (_L. guichenoti_). Despite sharing life-history traits, only _L. delicata_ has proven successful in colonising various global regions [@baker1979rainbow; @chapple2013divergent; @chapple2015deliinvLHI], and we predicted this may relate to higher behavioural flexibility. Furthermore, we expected behavioural flexibility in this species to be less susceptible to the effect of early environment since this trait can be adaptive in several stages of invasion involving more than one generation. Nevertheless, we did not find significant differences between treatments or species when we compared their performance in a reversal task. We found that, on average, all the lizards from the four treatments and the two species learned the reversal task - indicated by estimated slopes that are significantly different from zero - and that they learn, on average, at the same rate. Furthermore, these results were consistent when only those individuals who performed better in the previous associative task were included (see Supplementary material).  

Previous studies have shown that _L. delicata_ more readily explores novel environments than _L. guichenoti_, which can be advantageous during colonisation [@chapple_know_2011]. However, Bezzina _et al._ [@bezzina2014does] found no differences in learning between the two skinks in an associative learning task. Our results align with the latter study and suggest that behavioural flexibility does not differ between these species. In addition, we did not find any effect of the treatments on either species. Both results contrast our original predictions and may indicate that other aspects of their biology are more relevant for _L. delicata_'s success as invaders than behavioural flexibility. For instance, the mentioned differences in exploratory behaviour can be the key factor explaining why _L. delicata_ and not _L. guichenoti_ is better at colonising new areas, since exploring more can also enhance the ability to effectively locate novel resources in _L. delicata_ [@chapple_know_2011].  

Our early environment manipulation did not affect the lizards' performance in the task. We predicted that prenatal CORT treatment would decrease reversal learning abilities and that high temperatures would minimise these effects. However, our results show no significant differences between treatments in both species. In contrast to previous studies that show high GCs levels impaired performance in different types of learning tests [@lemaire_prenatal_2000; @zhu_prenatal_2004;  @farrell_developmental_2016], we did not find any effect of CORT on the speed at which lizards learn. Our results are, however, consistent with other experiments where GCs did not impact learning abilities [@szuran_water_1994; @bebus_associative_2016]. In some systems, exposure to CORT during development has hormetic effects on learning and neural structures [@du_dynamic_2009; @mcewen_brain_2012]. For example, in Sprague–Dawley rats, exposure to high doses of CORT, but not low doses, reduced density of immature neurons and cell proliferation and in the dentate gyrus [@DOSEneurobrummelte2010chronic]. The CORT treatment employed here is known to impact other aspects such as growth or mortality in these species (unpublished data), but the effect of the same dose can differ between tissues (@lemaire_prenatal_2000). More striking is the absence of an effect of incubation temperature since most of the studies in reptiles reported better performance when incubated at higher temperatures in different associative learning and motor tasks [@amiel_hotter_2012; @amiel_egg_2014; @clark_colour_2014]. Furthermore, those studies that reported cold-incubated lizards learn faster [@dayananda_incubation_2017; @abayarathna_effects_2020] used incubation temperatures far beyond the natural range in their hot treatments. We know that our prenatal treatments affect other traits in both species of lizards used in this experiment (unpublished data). However, it is possible that the treatments affected tissues differently. An alternative hypothesis is that the effects of the prenatal treatments are age-dependent [see @frisone2002social]. Here, the lizards' age at the beginning of the experiment ranged from 41 to 148 days old in _L. delicata_ and 48 to 132 in _L. guichenoti_, and when this variable was included in the models, we did no find any significant effect of age (see Supplementary material). However, the treatments may have consequences at earlier or later stages of life that are not being captured in our experiment. Conversely, the effects of the early environment may likely vary depending on the cognitive task, as evidenced by studies showing variations in the impact of prenatal GCs and temperature on different brain regions [@coomber_independent_1997; @sakata_neural_2000; @lemaire_prenatal_2000]. In addition, prenatal GCs can have programmatic effects on HPA axis sensitivity, potentially impacting the lizards' sensitivity to stressors [@crino_corticosterone_2014]. This altered stress response may influence learning dynamics through hormetic effects of CORT [@du_dynamic_2009], particularly in stressful contexts [@taborsky2021towards]; although such effects were not likely observable in our experimental design. These hypotheses are not mutually exclusive and could be tested in future experiments using multiple doses of prenatal CORT treatment, assessing learning using multiple cognitive tasks and at different ages, testing the effect of stress during the learning process, and measuring the neurophysiological effects on different brain nuclei.  

In conclusion, our results indicate that lizards performed the reversal learning task, a measure of behavioural flexibility, at similar rates, with no discernible differences between treatments or species. These findings contrast our initial predictions and suggest that other aspects of _L. delicata_ biology may be more influential for their success as invaders than behavioural flexibility alone. The present study also indicates that prenatal CORT and temperature do not affect learning abilities in these species. Nevertheless, it remains possible that the effects of the early environment are task-dependent, and future studies should explore performance across different cognitive tasks and the effects of both treatments on brain function.  

## Ethics  
Experiments complied with Australian law and were approved by the Australian National University Animal Experimentation Ethics Committee (A2022_33).  

## Data accessibility  
All data, data description, and R code are availabe in public repository https://github.com/Pablo-Recio/CORT_Temp_Behavioural_flexibility  

## Declaration of AI use
We declare Chat GPT was used for questions related to coding and data analyses. All other parts of the manuscript were written by the authors and those parts where AI was used were checked and modified accordingly by the authors.

## Authors' contributions
P.R.: conceptualization, methodology, data collection, data curation, formal analysis, writing—original draft, writing—review and editing; D.C.L.: data collection, writing—review and editing; O.C.: conceptualization, methodology, writing—review and editing; K.H.W.: conceptualization, writing—review and editing; C.F.: conceptualization, methodology, funding acquisition,writing—review and editing; B.M: data collection, writing—review and editing; A.Y.P.: data collection, writing—review and editing; D.N.: conceptualization, methodology, funding acquisition, project administration, resources, supervision, writing—review and editing.  
All authors gave final approval for publication and agreed to be held accountable for the work performed therein.  

## Conflict of interest declaration  
We declare we have no competing interests.  

## Funding
This work was supported by a National Australian University fellowship (P.R.), the Australian Research Council (grant no. DP210101152) to D.N. and C.F., and the ACT Herpetological Association grant to P.R.

## Acknowledgements
We thank the help and assistance of our lab technicians Benjamin Durant and Michelle Stephens for taking care of the lizards. We are also grateful to ACTHA for the grant for the 3D printed feeders, and we also thank ANU MakerSpace, where we designed and built the prototypes of the 3D printed feeders. Finally, we wish to acknowledge the anonymous reviewers for their valuable feedback on the manuscript.  

## References
<div id="refs"></div>

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

# Suplementary Material

#### Methods details

###### Husbandry  
*Breeding colony* -- We tested juveniles originating from a breeding colony established in the lab since 2019. There is a total of 270 and 180 adults of *L. delicata* and *L. guichenoti* respectively, housed in big containers (41.5 L x 30.5 W x 21 H cm) with six lizards (2 males and 4 females) per enclosure. Enclosures are provided with non-stick matting, shelter, and several small water dishes. Water is given daily, and they are fed approx. 40 mid-size crickets (*Acheta domestica*) per enclosure three days a week. Crickets are dusted with calcium weekly and multivitamin and calcium biweekly. To ensure a temperature gradient, we employ a heat chord and a heat lamp following a 12 h light:12 h dark cycle. Room temperatures are set to 22-24 Celsius, and warm side of enclosures is usually at 32 Celsius.  

*Eggs collection and incubation* -- Between mid-October 2022 to the end of February 2023, we provided females with a place to lay the eggs by means of small boxes (12.5 L x 8.3 W x 5 H cm) with moist vermiculite inside, that were placed in one extreme of the communal enclosures (see above). We checked for the presence of eggs in the boxes three days a week. After collection, we measured length and width of eggs with a digital caliper to the nearest 0.1 mm and weighed them with a (OHAUS, Model spx123) digital scale ± 0.001g error. Then eggs were treated with CORT or vehicle (see CORT and Temperature manipulation below) and were placed in individual cups (80 mL) with moist vermiculite (12 parts water to 4 parts vermiculite). The cups were covered with cling wrap to retain moisture and left in LATWIT 2X5D-R1160 incubators at two different temperatures (see CORT and Temperature manipulation below) until hatching.  

*Hatchlings* -- Eggs in the incubator were checked three times a week for hatchlings. After hatchling, we measured juveniles' SVL and Tail Length (TL) with a ruler to the nearest mm and weighed them with a (OHAUS, Model spx123) digital scale ± 0.001g error. We then placed hatchlings in individual enclosures (18.7L x 13.2W x 6.3H cm) and provided them with non-stick matting and a small water dish. During this period, they were sprayed water every day and received 3-6 small *A. domestica* crickets three times a week. All care otherwise follows similar protocols to adults (see above).  

Two weeks before we started the training phase (see below), lizards were moved to the experimental arena for acclimatation. The arenas were individual medium size (41 L x 29.7 W x 22 H cm) plastic containers with a shelter (9 L x 6 W x 1.5 H cm) on one of the extremes and a water dish on the other. These new enclosures were placed in two rooms in 7 different racks associated to 7 different CCTV systems (device model DVR-HP210475) that allowed us to record their behaviour during the experiment (see details below). The number of lizards per species and treatment in each rack was counterbalanced to control for any effect of the room or the position of the lizard in the rack. During acclimatation and throughout the experiment, lizards were fed with only one cricket per day dusted with calcium and multivitamin (see protocol below), and water was supplied *ad libitum*. We provided a temperature gradient by means of a heat cord and heat lamps in a 12 h light: 12 h dark cycle. The temperature of both rooms was set to between 22-24 Celsius.  

###### CORT and Temperature manipulation  
To test empirically the effect of early environment we manipulated CORT concentration in eggs and incubated them under one of two temperature regimes (Cold -- 23ºC ± 3ºC or Hot -- 30ºC ± 3ºC) in a 2x2 factorial design (@fig-Methods A). We first allocated eggs to one of two different treatments: CORT treatment, where eggs were topically supplied with 5µL of CORT dissolved in 100% Ethanol (vehicle) at a final (10 pg CORT/mL) concentration (CORT treatment); and a Control treatment, where eggs received an equal volume of the vehicle. CORT concentration employed in the CORT treatment represents 2 standard deviations above the mean natural concentration obtained in eggs from both species (non-published data). Then, eggs were incubated in one of the two previously mentioned temperature regimes (Cold or Hot) until hatching. The number of eggs per clutch assigned to each hormone and temperature treatment were counterbalanced in both species.  

###### Learning task
The habituation phase was divided into three stages: in the first stage, the reward, a small, frozen cricket (*A. domestica*) was placed in an opaque petri dish (3D x 1.6H cm) (@fig-Methods B, Stage 1); in the second stage, the petri dish with the cricket was placed on top of the white 3D printed ramps (@fig-Methods B, Stage 2); and in the third stage, the cricket was left inside a well (3D x 1.75H cm) on top of the ramp (Fig. @fig-Methods B, Stage 3). Trials in every stage lasted one hour, begining when the feeding block (petri dish, ramp, or both) was placed inside the enclosure and finished when we took the feeding block away. We recorded whether the cricket had been consumed or not and we considered a stage as completed if the lizards ate the crickets in at least 5 out of 6 trials. This phase lasted 38 days, and only in one case we decided not to use the lizard in the next phases because its behaviour was not consistent.  
In the associative phase, we used three ramps that were identical in shape and size but differ in the colour (Associative task in Fig. @fig-Methods B). As in the last stage of the habituation phase, we placed the cricket inside the wells of the ramps, but then two of them were covered with 3D-printed lids (3D x 0.5H cm) so prey was only accessible in "the correct" ramp. The food reward was placed in all three wells to avoid lizards using prey chemical cues, that were released in the closed wells through a series of small holes on the top of the lids. The colours of the feeders were green, red, and blue, as previous studies demonstrate that squamates can discriminate between these colours [@Baden_Osorio_2019_Vert_vision]. However, we decided to split the lizards in two groups to control for potential colour preference that could bias our results. One group of lizards was assigned the blue ramp as the correct choice (i.e., the ramp with the non-covered frozen cricket) in the associative task and the red ramp in the reversal, while the other group was assigned red as correct for the associative and blue for the reversal. In all trials, the position of the feeders was changed randomly to ensure subjects were using colour rather than spatial cues for the association. Lizards were tested in this task once a day for 35 days. After the colour association phase, we performed a choice reversal task (Reversal task in @fig-Methods B). Here, the attainability of prey was indicated by a different colour from the reversal, requiring the lizards to form a novel association between the new colour and the food reward. This test was done once a day for 40 days.  

We performed the full experiment between the 6^th^ of March until the 26^th^ of June 2023, between 11 to 12 am, when the lizards were active. Trials in the learning phases (colour associative task and reversal tasks) were recorded with different CCTV systems always using the same camera per individual. Videos were analysed manually using a standard video player (IINA) by PR, who recorded whether the first choice made by each subject was the correct feeder or not. We considered a choice was made if the head of the lizard was inside the well of one of the ramps. We considered a trial failed if there was no choice in one hour of recording and those trials were considered as 'non data' in the analyses. We excluded from our analyses those individuals with more than 15 trials failed (i.e. they did not make a choice), and we considered the first trial to be the first one where the individual made a choice. We also considered individuals to be reinforced if the cricket was eaten after the test independently of whether their initial choice was correct or not.  


```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Checking the models plots  

```{r, residuals}
# Chunk for calling all the models and making the residuals
## L. delicata
mod_deli <- readRDS(here("output/models/delicomplete.rds"))
resid_deli <- residuals(mod_deli)
## L. guichenoti
mod_guich <- readRDS(here("output/models/guichcomplete.rds"))
resid_guich <- residuals(mod_guich)
```

Model formula for the reversal task is:  

Choice  ~ trial_reversal*cort*temp + (1 + trial_reversal|lizard_id)  

Plots for the different models of the associative task:  
1.- _L. delicata_    
```{r , plotmod_drr, out.width="70%", fig.align="center"}
bayes_R2(mod_deli)
plot(mod_deli)
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

2.- _L. guichenoti_  
```{r , plotmod_grr, out.width="70%", fig.align="center"}
bayes_R2(mod_guich)
plot(mod_guich)
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

```{r, tbl-data, results='asis'}
#| label: tbl-data
#| tbl-cap: "Estimates of Reversal learning slope for all the different treatments per each task, species, and group. Mean shows the arithmetic means of the estimates obtained from the posteriors of the model, and 95% CI indicates the 95% confidence interval of the mean. All pmcmc tested the hypothesis that the mean equals zero. In bold, those values that are significant (pmcmc <0.05)"
source(here("R", "func.R"))
#
############################## CREATING BIG DF FOR TABLE ##############################
# Building the vectors for titles of rows and columns
specie <- c("L. delicata", "L. guichenoti")
treatments <- c("CORT-Cold", "Control-Cold", "CORT-Hot", "Control-Hot")
values <- c("Mean", "95% CI", "pmcmc")
# Building the vectors for estimated means, co.intervals(95%), and pmcmc for the slopes obtained from posteriors, assuming a two-tailed test that testes the hypothesis that the value (slopes in this case) is 0.
#First get estimates for both tasks
estimates <- list(
  deli_CORTCold, deli_ControlCold, deli_CORTHot, deli_ControlHot, 
  guich_CORTCold, guich_ControlCold, guich_CORTHot, guich_ControlHot
)
#
# Then get the mean, co.intervals(95%), and pmcmc
mean <- format_dec(sapply(estimates, mean), 3)
interval_025 <- format_dec(sapply(estimates, function(x) quantile(x,0.025)), 3)
interval_975 <- format_dec(sapply(estimates, function(x) quantile(x,0.975)), 3)
intervals <- paste(interval_025, interval_975, sep = " , ")
Pmcmc <- format_p(sapply(estimates, pmcmc), 4)
#
# Building the df
table_df <- data.frame(
  Specie = rep(specie, each = length(treatments)),
  Treatment = rep(rep(treatments, each = 1), times = length(specie)),
  Mean = rep(mean, each = 1),
  CI = rep(intervals, each = 1),
  Pmcmc = rep(Pmcmc, each = 1)
)
#
write.csv(table_df, file= "./output/Checking/df.csv")
#
############################## ADDING SAMPLE SIZE TO DF FOR TABLE ##############################
# Make n_list into a df
n_df <- as.data.frame(do.call(rbind, n_list)) %>%
  rename("n" = V1) %>%
  rownames_to_column("model") %>%
  separate(model, into = c("Specie", "cort", "temp"), sep = "_") %>%
  unite("Treatment", c("cort", "temp"), sep = "-") %>%
  mutate(Specie = factor(Specie,
                  labels = c(delicata = "L. delicata", guichenoti = "L. guichenoti")),
        Treatment = factor(Treatment,
                   levels = c("CORT-Cold", "Control-Cold", "CORT-Hot","Control-Hot")))
# Estimate total sample size per species and number of observations (this will allow to include this data in the first column of the table)
n_deli <- n_list$delicata_CORT_Cold+n_list$delicata_Control_Cold+n_list$delicata_CORT_Hot+n_list$delicata_Control_Hot
ob_deli <- sum(clean_df$species == "delicata", na.rm = TRUE)
n_guich <- n_list$guichenoti_CORT_Cold+n_list$guichenoti_Control_Cold+n_list$guichenoti_CORT_Hot+n_list$guichenoti_Control_Hot
ob_guich <- sum(clean_df$species == "guichenoti", na.rm = TRUE)
# Merge both dfs, put sample size together with the treatment, and organize the new df to make it look like the table
new_table_df <- merge(table_df, n_df) %>%
  rename('pmcmc' = 'Pmcmc', '95% CI' = 'CI') %>% #Change the names of the columns for the table
  select(Specie, Treatment, Mean, `95% CI`, `pmcmc`, n) %>% #To order the columns in the way I want for the table
  mutate(Specie = factor(Specie,
                  levels = c("L. delicata", "L. guichenoti")),
        Treatment = factor(Treatment, 
                  levels = c("CORT-Cold", "Control-Cold", "CORT-Hot", "Control-Hot")))%>%
  arrange(Specie, Treatment) %>% # To arrange the rows the way I want
  unite("Treatment", c("Treatment", "n"), sep = " (n = ") %>%
  mutate(Treatment = paste0(Treatment, ")"))
write.csv(new_table_df, file= "./output/Checking/new_table_data.csv")
#
############################## MAKING THE TABLE ##############################
## Table format
set_flextable_defaults(
 font.family = "Times New Roman",
 fint.size = 10)
# Split the table_data df by task
real_table <- flextable(new_table_df) %>%
    bold(~ `pmcmc` < 0.05, ~ `pmcmc` + Mean + `95% CI`) %>%
    set_table_properties(width = 1) %>%
    align(align="center", part="all") %>% 
    set_header_labels(Mean = "Mean",
                      `95% CI` = "95% CI",
                      `pmcmc` = "pmcmc") %>%
    italic(i= c(1, 5), j = 1, italic = TRUE, part = "body") %>% # To have names of species in italics
    flextable::compose(i = c(2:4,6:8), j = 1, value = as_paragraph(""), part = "body") %>% # To remove some of the values in the first column
    flextable::compose(i = 2, j = 1, value = as_paragraph(sprintf("N = %d", n_deli)), part = "body") %>% # To write the delicata sample size
    flextable::compose(i = 6, j = 1, value = as_paragraph(sprintf("N = %d", n_guich)), part = "body") %>% # To write the guichenoti sample size
    flextable::compose(i = 3, j = 1, value = as_paragraph(sprintf("Obs = %d", ob_deli)), part = "body") %>% # To write the delicata total observations
    flextable::compose(i = 7, j = 1, value = as_paragraph(sprintf("Obs = %d", ob_guich)), part = "body") %>% # To write the guichenoti total observations
    hline(i = 4, j = c(1:5), part = "body") %>% # To make some horizontal lines
    autofit() 
real_table
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

```{r, cleandata2}
#| label: cleandata2
# Cleaning the data to select only those individuals that passed a learning criterion of 80% correct choices in the last 10 trials of the associative task.
data <- read.csv(here("data/Learning.csv"))
percentage_per_lizard <- data %>%
  filter(trial_associative > 25 & trial_associative <= 35) %>%
  group_by(lizard_id) %>%
  summarise(percentage = mean(FC_associative == 1))
# Filter lizards where the percentage is at least 80%
filtered_lizards <- percentage_per_lizard %>%
  filter(percentage >= 0.8)
# Subset the original dataset based on the filtered lizard IDs
clean_df_2 <- data %>%
  filter(lizard_id %in% filtered_lizards$lizard_id) %>%
  filter(sum(is.na(FC_reversal)) <= 15) %>%
    mutate(temp = gsub("[AB]_", "", trt),
          cort = gsub("_[2][38]", "", trt))  %>%
    mutate(temp = factor(temp,
      levels = c("23", "28"),
      labels = c("23" = "Cold", "28" = "Hot"))) %>%
    mutate(cort = factor(cort,
      levels = c("B", "A"),
      labels = c("B" = "CORT", "A" = "Control"))) %>%
    mutate(trial_reversal=as.numeric(trial_reversal)) %>%
  data.frame()
```

```{r, sampleSize2}
#| label: sampleSize2
# List with the sample sizes from the database (here("output/databases_clean/data_asso.csv") as the sample size per species and group is the same on each task. We used function sample (see func.R) to estimate the sample size per treatment and species.
source(here("R", "func.R"))
#
specie <- c("delicata", "guichenoti")
hormone <- c("CORT", "Control")
temperature <- c("Cold", "Hot")
#
n_list_2 <- list()
for(i in 1:length(specie)){
  for(k in 1:length(hormone)){
    for(l in 1:length(temperature)){
      n_list_2[[paste(specie[i], hormone[k], temperature[l], sep = "_")]] <- sample(clean_df_2, specie[i], hormone[k], temperature[l])
      }
    }
  }
```

```{r, models2}
#| label: models2
# Fitting the model and extraction of posteriors for both types of task and species using fit_m function (see func.r in R folder). The result everytime the function is used is a df with the posteriors of the model. The functions saves the model automatically in output/models; and when the parameter refit = FALSE then the posteriors are extracted from the model previously written instead of fitting the model again each time.
source(here("R", "func.R"))
# Model formula: FC_reversal ~ trial_reversal*cort*temp + (1 + trial_reversal|lizard_id)
## A) L. delicata
deli_2 <- fit_m(clean_df_2, "deli", "suppl", refit = FALSE)
write.csv(deli_2, file= "./output/Checking/deli.csv")
## B) L. guichenoti
guich_2 <- fit_m(clean_df_2, "guich", "suppl", refit = FALSE)
write.csv(guich_2, file= "./output/Checking/guich.csv")
```

```{r, resultsRev2}
# Rename some of the posteriors and make new estimates for the learning rate for the Reversal task doing the same thing we did in the chunk above.
## 1) L. delicata
deli_CORTCold_2 <- deli_2$b_trial_reversal
deli_ControlCold_2 <- (deli_2$'b_trial_reversal:cortControl' + deli_2$b_trial_reversal)
deli_CORTHot_2 <- (deli_2$'b_trial_reversal:tempHot' + deli_2$b_trial_reversal)
deli_ControlHot_2 <- (deli_2$'b_trial_reversal:cortControl:tempHot' + deli_2$b_trial_reversal + deli_2$'b_trial_reversal:cortControl' + deli_2$'b_trial_reversal:tempHot')
## 2) L. guichenoti
guich_CORTCold_2 <- guich_2$b_trial_reversal
guich_ControlCold_2 <- (guich_2$'b_trial_reversal:cortControl' + guich_2$b_trial_reversal)
guich_CORTHot_2 <- (guich_2$'b_trial_reversal:tempHot' + guich_2$b_trial_reversal)
guich_ControlHot_2 <- (guich_2$'b_trial_reversal:cortControl:tempHot' + guich_2$b_trial_reversal + guich_2$'b_trial_reversal:cortControl' + guich_2$'b_trial_reversal:tempHot')
```

```{r, tbl-data_2}
#| label: tbl-data_2
#| tbl-cap: "Estimates of Reversal learning slope for all the different treatments per each task, species, and group. Here we included only those individuals who made the right choice in 8 out of the last 10 trials in the previous associative task. Mean shows the arithmetic means of the estimates obtained from the posteriors of the model, and 95% CI indicates the 95% confidence interval of the mean. All pmcmc tested the hypothesis that the mean equals zero. In bold, those values that are significant (pmcmc <0.05)"
source(here("R", "func.R"))
#
############################## CREATING BIG DF FOR TABLE ##############################
# Building the vectors for titles of rows and columns
specie <- c("L. delicata", "L. guichenoti")
treatments <- c("CORT-Cold", "Control-Cold", "CORT-Hot", "Control-Hot")
values <- c("Mean", "95% CI", "pmcmc")
# Building the vectors for estimated means, co.intervals(95%), and pmcmcm for the slopes obtained from posteriors assuming a two-tailed test that testes the hypothesis that the value (slopes in this case) is 0.
#First get estimates for both tasks
estimates_2 <- list(
  deli_CORTCold_2, deli_ControlCold_2, deli_CORTHot_2, deli_ControlHot_2, 
  guich_CORTCold_2, guich_ControlCold_2, guich_CORTHot_2, guich_ControlHot_2
)
#
# Then get the mean, co.intervals(95%), and pmcmc
mean_2 <- format_dec(sapply(estimates_2, mean), 3)
interval_025_2 <- format_dec(sapply(estimates_2, function(x) quantile(x,0.025)), 3)
interval_975_2 <- format_dec(sapply(estimates_2, function(x) quantile(x,0.975)), 3)
intervals_2 <- paste(interval_025_2, interval_975_2, sep = " , ")
Pmcmc_2 <- format_p(sapply(estimates_2, pmcmc), 4)
#
# Building the df
table_df_2 <- data.frame(
  Specie = rep(specie, each = length(treatments)),
  Treatment = rep(rep(treatments, each = 1), times = length(specie)),
  Mean = rep(mean_2, each = 1),
  CI = rep(intervals_2, each = 1),
  Pmcmc = rep(Pmcmc_2, each = 1)
)
#
write.csv(table_df, file= "./output/Checking/df.csv")
#
############################## ADDING SAMPLE SIZE TO DF FOR TABLE ##############################
# Make n_list into a df
n_df_2 <- as.data.frame(do.call(rbind, n_list_2)) %>%
  rename("n" = V1) %>%
  rownames_to_column("model") %>%
  separate(model, into = c("Specie", "cort", "temp"), sep = "_") %>%
  unite("Treatment", c("cort", "temp"), sep = "-") %>%
  mutate(Specie = factor(Specie,
                  labels = c(delicata = "L. delicata", guichenoti = "L. guichenoti")),
        Treatment = factor(Treatment,
                   levels = c("CORT-Cold", "Control-Cold", "CORT-Hot","Control-Hot")))
# Estimate total sample size per species and number of observations (this will allow to include this data in the first column of the table)
n_deli_2 <- n_list_2$delicata_CORT_Cold+n_list_2$delicata_Control_Cold+n_list_2$delicata_CORT_Hot+n_list_2$delicata_Control_Hot
ob_deli_2 <- sum(clean_df_2$species == "delicata", na.rm = TRUE)
n_guich_2 <- n_list_2$guichenoti_CORT_Cold+n_list_2$guichenoti_Control_Cold+n_list_2$guichenoti_CORT_Hot+n_list_2$guichenoti_Control_Hot
ob_guich_2 <- sum(clean_df_2$species == "guichenoti", na.rm = TRUE)
# Merge both dfs, put sample size together with the treatment, and organize the new df to make it look like the table
new_table_df_2 <- merge(table_df_2, n_df_2) %>%
  rename('pmcmc' = 'Pmcmc', '95% CI' = 'CI') %>% #Change the names of the columns for the table
  select(Specie, Treatment, Mean, `95% CI`, `pmcmc`, n) %>% #To order the columns in the way I want for the table
  mutate(Specie = factor(Specie,
                  levels = c("L. delicata", "L. guichenoti")),
        Treatment = factor(Treatment, 
                  levels = c("CORT-Cold", "Control-Cold", "CORT-Hot", "Control-Hot")))%>%
  arrange(Specie, Treatment) %>% # To arrange the rows the way I want
  unite("Treatment", c("Treatment", "n"), sep = " (n = ") %>%
  mutate(Treatment = paste0(Treatment, ")"))
write.csv(new_table_df, file= "./output/Checking/new_table_data.csv")
#
############################## MAKING THE TABLE ##############################
## Table format
set_flextable_defaults(
 font.family = "Times New Roman",
 fint.size = 10)
# Split the table_data df by task
real_table_2 <- flextable(new_table_df_2) %>%
    bold(~ `pmcmc` < 0.05, ~ `pmcmc` + Mean + `95% CI`) %>%
    set_table_properties(width = 1) %>%
    align(align="center", part="all") %>% 
    set_header_labels(Mean = "Mean",
                      `95% CI` = "95% CI",
                      `pmcmc` = "pmcmc") %>%
    italic(i = c(1,5), j = 1, italic = TRUE, part = "body") %>% # To have names od species in italics
    flextable::compose(i = c(2:4,6:8), j = 1, value = as_paragraph(""), part = "body") %>% # To remove some of the values in the first column
    flextable::compose(i = 2, j = 1, value = as_paragraph(sprintf("N = %d", n_deli_2)), part = "body") %>% # To write the delicata sample size
    flextable::compose(i = 6, j = 1, value = as_paragraph(sprintf("N = %d", n_guich_2)), part = "body") %>% # To write the guichenoti sample size
    flextable::compose(i = 3, j = 1, value = as_paragraph(sprintf("Obs = %d", ob_deli_2)), part = "body") %>% # To write the delicata total observations
    flextable::compose(i = 7, j = 1, value = as_paragraph(sprintf("Obs = %d", ob_guich_2)), part = "body") %>% # To write the guichenoti total observations
    hline(i = 4, j = c(1:5), part = "body") %>% # To make some horizontal lines
    autofit() 
real_table_2
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

Checking the effect of age on the learning rate in the associative task.

Model formula: 
Choice ~ age.start + trial_associative * cort * temp + (1 + trial_associative|lizard_id)

```{r, modelsage}
#| label: modelsage
# Fitting the models for L. delicata and L. guichenoti including age as a covariate
#
data_age <- clean_df %>%
  mutate(age.start = as.numeric(age.start)-mean(as.numeric(age.start)))
refit2 = FALSE
formula <- FC_reversal ~ age.start + trial_reversal*cort*temp + (1 + trial_reversal|lizard_id)
species <- c("delicata", "guichenoti")
#
models <- list() # Create an empty list to store the models
for(s in species){
  # Subset the data for the species
  data_species <- data_age %>%
    filter(species == s)
  # Define model file name
  model_file <- paste0("output/models/model_age_", s, ".rds")
# Fit the model only if it has not been fit yet (if refit2 = TRUE)
  if(refit2){
    # Fit the model
    model <- brm(formula,
                data = data_species,
                family = bernoulli(link = "logit"),
                chains = 4, cores = 4, iter = 3000, warmup = 1000, control = list(adapt_delta = 0.99))
    # Write the model to a file
    saveRDS(model, file = model_file)
  } else {
      # Read the model from a file
      model <- readRDS(file = model_file)
  }
  # Save the model to the list
  models[[s]] <- model
}
model_age_deli <- models[["delicata"]]
model_age_guich <- models[["guichenoti"]]
```

Results for _L. delicata_:
```{r, tbl-agedeli, results='asis', out.widht = "26cm"}
#| label: tbl-agedeli
#| tbl-cap: "Summary model_age_deli"
deli_age_res <- summary(model_age_deli)
# Extract fixed effects names and their corresponding estimates, CIs, etc.
fixed_effects <- deli_age_res$fixed %>%
  mutate_all(~ format_dec(., 2))
Predictors <- rownames(fixed_effects)
deli_age_tbl_df <- cbind(Predictors, fixed_effects)
# Convert the fixed effects data frame to a flextable
flextable(deli_age_tbl_df) %>%
  set_table_properties(., width = 1) %>%
  fontsize(size = 10, part = "all")
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

Results for _L. guichenoti_:
```{r, tbl-ageguich, results='asis'}
#| label: tbl-ageguich
#| tbl-cap: "Summary model_age_guich"
guich_age_res <- summary(model_age_guich)
# Extract fixed effects names and their corresponding estimates, CIs, etc.
fixed_effects <- guich_age_res$fixed %>%
  mutate_all(~ format_dec(., 2))
Predictors <- rownames(fixed_effects)
guich_age_tbl_df <- cbind(Predictors, fixed_effects)
# Convert the fixed effects data frame to a flextable
flextable(guich_age_tbl_df)%>%
  set_table_properties(., width = 1) %>%
  fontsize(size = 10, part = "all")
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

```{r, fig-age} 
#| label: fig-age
#| fig.cap: "Distribution of the age of the lizards by treatment and species"
# Plotting the distribution of the age of the lizards by treatment and species
# Load the data
data_age <- clean_df
# Plot the distribution of the age of the lizards by treatment and species
img_deli <- readPNG("./Others/Deli.png")
plot_age_deli <- data_age %>%
  filter(species == "delicata") %>%
  mutate(trt = factor(trt, 
          levels = c("A_23", "B_23", "A_28", "B_28"), 
          labels = c("Control-Cold", "CORT-Cold", "Control-Hot", "CORT-Hot"))) %>%
  ggplot(aes(x = age.start, color = trt)) +
  geom_density(linewidth = 1.5) +
  scale_color_manual(values = c("CORT-Cold"="darkblue", "Control-Cold"="#68bde1", "CORT-Hot"="#b50101", "Control-Hot"="#fa927d")) +  
  labs(title = "L. delicata", x = "Age (days)", color = "Treatments") +
  theme_classic() +
  theme(plot.margin = margin(5.5, 5.5, 5.5, 5.5, "mm"),
    plot.title = element_text(size = 14, family = "Times", face = "italic"),
    axis.text.y = element_blank(),   # Remove y-axis labels
    axis.title = element_text(size = 12, family = "Times"),
    axis.text = element_text(size = 10, family = "Times"),
    legend.position = "right",
    legend.title = element_text(size = 12, family = "Times"),
    legend.text = element_text(size = 11, family = "Times")
    ) +
  annotation_custom(rasterGrob(img_deli), xmin = 0.73, xmax = 0.98, ymin = 0.73, ymax = 0.98)
#
img_guich <- readPNG("./Others/Guich.png")
plot_age_guich <- data_age %>%
  filter(species == "guichenoti") %>%
  mutate(trt = factor(trt, 
          levels = c("A_23", "B_23", "A_28", "B_28"), 
          labels = c("Control-Cold", "CORT-Cold", "Control-Hot", "CORT-Hot"))) %>%
  ggplot(aes(x = age.start, color = trt)) +
  geom_density(linewidth = 1.5) +
  scale_color_manual(values = c("CORT-Cold"="darkblue", "Control-Cold"="#68bde1", "CORT-Hot"="#b50101", "Control-Hot"="#fa927d")) +  
  labs(title = "L. guichenoti", x = "Age (days)", color = "Treatments") +
  theme_classic() +
  theme(plot.margin = margin(5.5, 5.5, 5.5, 5.5, "mm"),
    plot.title = element_text(size = 14, family = "Times", face = "italic"),
    axis.text.y = element_blank(),   # Remove y-axis labels
    axis.title = element_text(size = 12, family = "Times"),
    axis.text = element_text(size = 10, family = "Times"),
    legend.position = "right",
    legend.title = element_text(size = 12, family = "Times"),
    legend.text = element_text(size = 11, family = "Times")
    ) +
  annotation_custom(rasterGrob(img_guich), xmin = 0.73, xmax = 0.98, ymin = 0.73, ymax = 0.98)
#
plot_age <- plot_grid(plot_age_deli, plot_age_guich, ncol = 1)
ggsave("./output/figures/plot_age.png", plot=plot_age, width = 25, height = 18, units = "cm", dpi = 600)
knitr::include_graphics("./output/figures/plot_age.png")
```
